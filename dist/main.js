/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/control */ \"./modules/control.js\");\n/* harmony import */ var _modules_create__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/create */ \"./modules/create.js\");\n/* harmony import */ var _modules_render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/render */ \"./modules/render.js\");\n/* harmony import */ var _modules_dbRequest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/dbRequest */ \"./modules/dbRequest.js\");\n/* harmony import */ var _modules_regExp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/regExp */ \"./modules/regExp.js\");\n/* harmony import */ var _modules_admin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/admin */ \"./modules/admin.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.control = new _modules_control__WEBPACK_IMPORTED_MODULE_0__.Control();\r\nwindow.create = new _modules_create__WEBPACK_IMPORTED_MODULE_1__.Create();\r\nwindow.render = new _modules_render__WEBPACK_IMPORTED_MODULE_2__.Render();\r\nwindow.dbRequest = new _modules_dbRequest__WEBPACK_IMPORTED_MODULE_3__.DbRequest();\r\nwindow.regExp = new _modules_regExp__WEBPACK_IMPORTED_MODULE_4__.RegExp();\r\nwindow.admin = new _modules_admin__WEBPACK_IMPORTED_MODULE_5__.Admin();\r\n\r\nwindow.addEventListener('load', async () => {\r\n    control.scrollControl();\r\n\r\n    if (window.location.pathname === '/yurinat/news.html') {\r\n        control.modalsControl();\r\n        const newsArr = await dbRequest.getNews();\r\n        await render.renderNewsCards(newsArr, 'news');\r\n    }\r\n\r\n    if (window.location.pathname === '/yurinat/index.html') {\r\n        control.modalsControl();\r\n        const newsArr = await dbRequest.getNews();\r\n        await render.renderNewsCards(newsArr, 'logistic');\r\n        control.brandsControl();\r\n    }\r\n\r\n    if (window.location.pathname === '/yurinat/news-item.html') {\r\n        control.modalsControl();\r\n        const newsArr = await dbRequest.getNews();\r\n        await render.renderNewsPage(newsArr);\r\n    }\r\n\r\n    if (window.location.pathname === '/yurinat/calc.html') {\r\n        control.modalsControl();\r\n\r\n        control.tabsControl();\r\n    }\r\n\r\n    if (window.location.pathname === '/yurinat/admin.html') {\r\n        admin.authControl();\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./modules/admin.js":
/*!**************************!*\
  !*** ./modules/admin.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Admin: () => (/* binding */ Admin)\n/* harmony export */ });\nclass Admin {\r\n    level = 2;\r\n\r\n    authControl = async () => {\r\n        const form = document.querySelector('.auth-modal__form');\r\n        const submit = document.querySelector('.auth-modal__send');\r\n\r\n        submit.addEventListener('click', async e => {\r\n            e.preventDefault();\r\n            console.log('aa');\r\n\r\n            const formData = new FormData(form);\r\n            const admins = await dbRequest.getAdmins();\r\n\r\n            await admins.forEach(e => {\r\n                if (e.login === formData.get('login') && e.password === formData.get('password')) {\r\n                    this.level = +e.level;\r\n                    form.remove();\r\n                    document.body.append(create.createAdminPage());\r\n\r\n                    const main = document.querySelector('.admin-main');\r\n                    main.append(create.createKanban());\r\n                    main.append(create.createPriceSet());\r\n                    main.append(create.createNewsAdmin());\r\n\r\n                    if (this.level === 0) {\r\n                        main.append(create.createAdmins());\r\n                    }\r\n                    this.workFlow();\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    getAllRequests = async () => {\r\n        const partners = await dbRequest.getRequests('partner');\r\n        const requests = await dbRequest.getRequests('request');\r\n        const transes = await dbRequest.getRequests('trans');\r\n        const allRequests = [];\r\n        let id = 0;\r\n\r\n        await requests.forEach(e => {\r\n            allRequests.push(e);\r\n        })\r\n        await transes.forEach(e => {\r\n            allRequests.push(e);\r\n        })\r\n        await partners.forEach(e => {\r\n            allRequests.push(e);\r\n        })\r\n\r\n        await allRequests.forEach(e => {\r\n            e.panelId = id;\r\n            id++;\r\n        })\r\n\r\n        return allRequests\r\n    }\r\n\r\n    chooseArray = async (full = 'yes', change = 'no', arr = 'no') => {\r\n        let chosenArray;\r\n        if (full === 'yes' && change === 'no') {\r\n            return await this.getAllRequests()\r\n        }\r\n        if (change === 'yes') {\r\n            chosenArray = arr;\r\n            return chosenArray\r\n        }\r\n    }\r\n\r\n    chooseArrayNews = async (full = 'yes', change = 'no', arr = 'no') => {\r\n        let chosenArray;\r\n        if (full === 'yes' && change === 'no') {\r\n            return await dbRequest.getNews();\r\n        }\r\n        if (change === 'yes') {\r\n            chosenArray = arr;\r\n            return chosenArray\r\n        }\r\n    }\r\n\r\n    renderCards = async (full = 'yes', change = 'no', arr = 'no') => {\r\n        // const columnOne = document.querySelector('.one');\r\n        // const columnTwo = document.querySelector('.two');\r\n        // const columnThree = document.querySelector('.three');\r\n        // const columnFour = document.querySelector('.four');\r\n        const requests = await this.chooseArray(full, change, arr);\r\n        const columns = document.querySelectorAll('.kanban__column-content');\r\n        columns.forEach(e => {\r\n            e.replaceChildren();\r\n        })\r\n        await requests.forEach(e => {\r\n            document.querySelector(`.${e.column}`).append(create.createKanbanCard(e));\r\n        });\r\n\r\n        control.cardDeleteControl();\r\n        control.cardEditControl();\r\n        control.dragControl();\r\n    }\r\n\r\n    renderAdmins = async () => {\r\n        const admins = await dbRequest.getAdmins();\r\n        const container = document.getElementById('admins');\r\n\r\n        container.replaceChildren();\r\n\r\n        await admins.forEach(e => {\r\n            container.append(create.createStripAdmin(e.name, `Логин: ${e.login}`, `Пароль: ${e.password}`, e.level, e.id))\r\n        })\r\n\r\n        // control.editAdminControl();\r\n        // control.deleteAdminControl();\r\n    }\r\n\r\n    renderNews = async (full = 'yes', change = 'no', arr = 'no') => {\r\n        const news = await this.chooseArrayNews(full, change, arr);\r\n        const newsContainer = document.querySelector('.news-admin');\r\n\r\n        newsContainer.replaceChildren();\r\n\r\n        await news.forEach(e => {\r\n            newsContainer.append(create.createAdminNewsCard(e.id, e.img, e.title, e.text));\r\n        });\r\n\r\n        // control.deleteNewsControl();\r\n        // control.editNewsControl();\r\n    }\r\n\r\n    workFlow = async () => {\r\n        await this.renderCards();\r\n\r\n        if (this.level === 0) {\r\n            await this.renderAdmins();\r\n        }\r\n        await this.renderNews();\r\n        control.dragControl();\r\n        control.columnControl();\r\n        control.searchControl();\r\n        control.priceControl();\r\n        control.addNewsControl();\r\n        if (this.level === 0) {\r\n            control.addAdminControl();\r\n            control.editAdminControl();\r\n            control.deleteAdminControl();\r\n        }\r\n        control.deleteNewsControl();\r\n        control.editNewsControl();\r\n        control.searchControlNews();\r\n    }\r\n\r\n\r\n}\n\n//# sourceURL=webpack:///./modules/admin.js?");

/***/ }),

/***/ "./modules/control.js":
/*!****************************!*\
  !*** ./modules/control.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Control: () => (/* binding */ Control)\n/* harmony export */ });\nclass Control {\r\n    modalsControl = (insert = '.container') => {\r\n        const partnerBtn = document.querySelectorAll('.partner-btn');\r\n        const container = document.querySelector(`${insert}`);\r\n\r\n        partnerBtn.forEach(e => {\r\n            e.addEventListener('click', () => {\r\n                const modal = create.createPartnerModal();\r\n                container.append(modal);\r\n                this.partnerModalControl();\r\n\r\n                const close = document.querySelector('.partner-modal__cross');\r\n                const form = document.querySelector('.partner-modal__form');\r\n\r\n                document.body.style.overflow = 'hidden';\r\n\r\n                close.addEventListener('click', () => {\r\n                    form.reset();\r\n                    modal.remove();\r\n                    document.body.style.overflow = 'visible';\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    getCurrentDate = () => {\r\n        const today = new Date();\r\n        const yyyy = today.getFullYear();\r\n        let mm = today.getMonth() + 1; // Months start at 0!\r\n        let dd = today.getDate();\r\n        if (dd < 10) dd = '0' + dd;\r\n        if (mm < 10) mm = '0' + mm;\r\n        const formattedToday = dd + '.' + mm + '.' + yyyy;\r\n\r\n        return formattedToday;\r\n    }\r\n\r\n    partnerModalControl = () => {\r\n        const overlay = document.querySelector('.overlay');\r\n        const form = document.querySelector('.partner-modal__form');\r\n        const close = document.querySelector('.partner-modal__cross');\r\n        const submit = document.querySelector('.partner-modal__send');\r\n        const container = document.querySelector('.container');\r\n\r\n        close.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            form.reset();\r\n            overlay.remove();\r\n        });\r\n\r\n        submit.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(form);\r\n\r\n            if (formData.get('inn').trim() === '' || formData.get('email').trim() === '' || formData.get('phone').trim() === '' ||\r\n                formData.get('type').trim() === '' || formData.get('company').trim() === '' ) {\r\n                container.append(create.createSuccess('no'));\r\n                this.successControl();\r\n            } else {\r\n                const item = {\r\n                    company: formData.get('company').trim(),\r\n                    type: formData.get('type').trim(),\r\n                    phone: formData.get('phone').trim(),\r\n                    email: formData.get('email').trim(),\r\n                    inn: formData.get('inn').trim(),\r\n                    comment: formData.get('comment').trim(),\r\n                    date: this.getCurrentDate(),\r\n                    column: 'one',\r\n                    service: 'partner',\r\n                }\r\n\r\n                dbRequest.addRequest(item, 'partner', container);\r\n\r\n                form.reset();\r\n                overlay.remove();\r\n            }\r\n\r\n\r\n            // container.append(create.createSuccess());\r\n        });\r\n    }\r\n\r\n    scrollControl = () => {\r\n        let upArr = document.createElement('div');\r\n        upArr.classList.add('up');\r\n        upArr.insertAdjacentHTML('beforeend', `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\">\r\n                <circle cx=\"22.5\" cy=\"22.5\" r=\"22.5\" fill=\"#4BB82F\"/>\r\n                <path d=\"M10.0001 26.5112C9.99925 26.191 10.0558 25.8746 10.1655 25.5853C10.2753 25.296 10.4355 25.0411 10.6343 24.8394L20.9191 14.4876C21.2258 14.1723 21.6105 14 22.0076 14C22.4046 14 22.7893 14.1723 23.096 14.4876L33.3808 25.2038C33.7308 25.5676 33.951 26.0903 33.9927 26.6571C34.0345 27.2238 33.8946 27.7881 33.6036 28.2257C33.3127 28.6634 32.8946 28.9387 32.4413 28.9909C31.988 29.0432 31.5367 28.8682 31.1867 28.5044L21.999 18.9241L12.8113 28.1829C12.5597 28.445 12.2533 28.6114 11.9284 28.6626C11.6035 28.7138 11.2736 28.6475 10.9779 28.4717C10.6822 28.2958 10.4329 28.0177 10.2596 27.6703C10.0863 27.3228 9.99629 26.9206 10.0001 26.5112Z\" fill=\"white\"/>\r\n            </svg>\r\n        `);\r\n\r\n        document.body.append(upArr);\r\n\r\n        window.addEventListener('scroll', () => {\r\n            if (window.scrollY > 700) {\r\n                if (!upArr.classList.contains('visible')) {\r\n                    upArr.classList.add('visible');\r\n                }\r\n            } else {\r\n                if (upArr.classList.contains('visible')) {\r\n                    upArr.classList.remove('visible');\r\n                }\r\n            }\r\n        });\r\n\r\n        upArr.addEventListener('click', () => {\r\n            window.scrollTo({\r\n                top: 0,\r\n                left: 0,\r\n                behavior: 'smooth'\r\n            });\r\n        })\r\n    };\r\n\r\n    tabsControl = () => {\r\n        const leftTab = document.querySelector('.calc__tab_request');\r\n        const rightTab = document.querySelector('.calc__tab_trans');\r\n        const tabs = document.querySelector('.calc__tabs');\r\n        const container = document.getElementById('calcContainer');\r\n\r\n        let requestItemsArr = [];\r\n        let itemId = 0;\r\n\r\n        container.append(create.createRequestModal());\r\n        this.controlCalcModals(requestItemsArr, itemId, 'request');\r\n\r\n        leftTab.addEventListener('click', () => {\r\n            if (!leftTab.classList.contains('selected')) {\r\n                leftTab.classList.toggle('selected');\r\n                rightTab.classList.toggle('selected');\r\n\r\n                while (container.children.length > 1) {\r\n                    container.removeChild(container.lastChild);\r\n                }\r\n\r\n                let requestItemsArr = [];\r\n\r\n                container.append(create.createRequestModal());\r\n                this.controlCalcModals(requestItemsArr, itemId, 'request');\r\n            }\r\n        });\r\n\r\n        rightTab.addEventListener('click', () => {\r\n            if (!rightTab.classList.contains('selected')) {\r\n                leftTab.classList.toggle('selected');\r\n                rightTab.classList.toggle('selected');\r\n\r\n                while (container.children.length > 1) {\r\n                    container.removeChild(container.lastChild);\r\n\r\n                }\r\n\r\n                let requestItemsArr = [];\r\n\r\n                container.append(create.createTransModal());\r\n                this.controlCalcModals(requestItemsArr, itemId, 'trans');\r\n            }\r\n        });\r\n    }\r\n\r\n    controlCalcModals = (requestItemsArr, itemId, service) => {\r\n        const confirm = document.getElementById('confirm');\r\n        const cancel = document.getElementById('cancel');\r\n        const requestForm = document.getElementById('requestForm');\r\n        const modal = document.getElementById('requestModal');\r\n        const container = document.getElementById('calcContainer');\r\n        const mainContainer = document.querySelector('.container');\r\n        const modalService = service;\r\n\r\n\r\n        const controlCalcRender = () => {\r\n            while (container.children.length > 1) {\r\n                container.removeChild(container.lastChild);\r\n            }\r\n\r\n            console.log(modalService);\r\n\r\n            requestItemsArr.forEach(e => {\r\n                if (modalService === 'request') {\r\n                    container.append(create.createCalcStrip(e.type, e.amount, e.id));\r\n                } else if (modalService === 'trans') {\r\n                    container.append(create.createCalcStrip(e.size, `${e.weight} кг.`, e.id));\r\n                }\r\n\r\n\r\n            });\r\n            this.controlStrip(requestItemsArr, itemId, modalService);\r\n            modal.remove();\r\n\r\n            container.append(create.createCalcButtons());\r\n            this.controlCalcButtons(requestItemsArr, itemId, modalService);\r\n        }\r\n\r\n        confirm.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(requestForm);\r\n\r\n            let requestItem = {\r\n\r\n            }\r\n\r\n            if (service === 'request') {\r\n                if (formData.get('type') === null || formData.get('amount').trim() === '' ||\r\n                    formData.get('index').trim() === '' || formData.get('comment').trim() === '' ||\r\n                    formData.get('index').trim().length !== 6) {\r\n                    mainContainer.append(create.createSuccess('no'));\r\n                    this.successControl();\r\n                } else {\r\n                    requestItem = {\r\n                        id: itemId++,\r\n                        country: formData.get('country'),\r\n                        type: formData.get('type'),\r\n                        amount: formData.get('amount').trim(),\r\n                        index: formData.get('index').trim(),\r\n                        comment: formData.get('comment').trim(),\r\n                        service: service,\r\n                    }\r\n\r\n                    requestItemsArr.push(requestItem);\r\n                    console.log(requestItemsArr);\r\n\r\n                    controlCalcRender();\r\n                }\r\n            } else if (service === 'trans') {\r\n                if (formData.get('indexFrom').trim() === '' || formData.get('indexFrom').trim().length !== 6 ||\r\n                    formData.get('indexTo').trim() === '' || formData.get('indexTo').trim().length !== 6 ||\r\n                    formData.get('size').trim() === '' || formData.get('weight').trim() === '' ||\r\n                    String(formData.get('indexFrom').trim()).substring(0, 3) !== '236' || String(formData.get('indexTo').trim()).substring(0, 3) !== '236') {\r\n\r\n                        mainContainer.append(create.createSuccess('no'));\r\n                        this.successControl();\r\n                } else {\r\n                    requestItem = {\r\n                        id: itemId++,\r\n                        indexFrom: formData.get('indexFrom').trim(),\r\n                        indexTo: formData.get('indexTo').trim(),\r\n                        size: formData.get('size').trim(),\r\n                        weight: formData.get('weight').trim(),\r\n                        service: service,\r\n                    }\r\n\r\n                    requestItemsArr.push(requestItem);\r\n                    console.log(requestItemsArr);\r\n\r\n                    controlCalcRender();\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            requestForm.reset();\r\n            modal.remove();\r\n\r\n            controlCalcRender();\r\n        });\r\n    }\r\n\r\n    controlCalcButtons = async (requestItemsArr, itemId, service, ifAdd = 'no') => {\r\n        const add = document.getElementById('calcAddButton');\r\n        const calc = document.getElementById('calcCalcButton')\r\n        const container = document.getElementById('calcContainer');\r\n        const mainContainer = document.querySelector('.container');\r\n        const calcButtons = document.getElementById('calcFinalButtons');\r\n\r\n        if (ifAdd !== 'no') {\r\n            add.addEventListener('click', e => {\r\n                e.preventDefault();\r\n\r\n                if (service === 'request') {\r\n                    container.append(create.createRequestModal());\r\n                } else if (service === 'trans') {\r\n                    container.append(create.createTransModal());\r\n                }\r\n\r\n                calcButtons.remove();\r\n                this.controlCalcModals(requestItemsArr, itemId, service);\r\n            });\r\n        }\r\n\r\n        calc.addEventListener('click', async e => {\r\n            e.preventDefault();\r\n\r\n            const moscowCoords = {\r\n                \"lat\": 55.772502,\r\n                \"lon\": 37.608949\r\n            }\r\n\r\n            const kaliningradCoords = {\r\n                \"lat\": 54.70549,\r\n                \"lon\": 20.552732\r\n            }\r\n\r\n            let coords;\r\n\r\n            if (service === 'request') {\r\n                if (String(requestItemsArr[0].index).substring(0, 3) === '236') {\r\n                    coords = kaliningradCoords;\r\n                } else {\r\n                    coords = moscowCoords;\r\n                }\r\n\r\n                dbRequest.getCoords(requestItemsArr[0].index, coords, mainContainer, requestItemsArr, service, itemId);\r\n\r\n            } else if (service === 'trans') {\r\n                coords = kaliningradCoords;\r\n\r\n                dbRequest.getCoords(requestItemsArr[0].indexTo, coords, mainContainer, requestItemsArr, service, itemId);\r\n            }\r\n        });\r\n    }\r\n\r\n    controlRequestFinal = (requestItemsArr, service, distance, itemId) => {\r\n        const sliderContainer = document.querySelector('.final-request__slider');\r\n        const leftArrow = document.querySelector('.final-request__arrow_left');\r\n        const rightArrow = document.querySelector('.final-request__arrow_right');\r\n        const cancelButton = document.querySelector('.final-request__cancel-button');\r\n        const overlay = document.querySelector('.overlay');\r\n        const phoneCall = document.querySelector('.final-request__call-button');\r\n        const page = document.querySelector('.final-request__page');\r\n        const container = document.querySelector('.container');\r\n\r\n        const firstItem = requestItemsArr[0];\r\n        let currentPage = 1;\r\n        let maxPage = requestItemsArr.length;\r\n\r\n        const insertSlide = (item) => {\r\n            if (service === 'request') {\r\n                sliderContainer.insertBefore(create.createFinalSlide(item.country, item.type,\r\n                    item.amount, item.index, item.comment), rightArrow);\r\n            } else if (service === 'trans') {\r\n                sliderContainer.insertBefore(create.createFinaSlideTrans(item.indexFrom, item.indexTo, item.size,\r\n                    item.weight), rightArrow);\r\n            }\r\n\r\n            page.textContent = `${currentPage}/${requestItemsArr.length}`\r\n        }\r\n\r\n        insertSlide(firstItem);\r\n\r\n        cancelButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            document.body.style.overflow = 'visible';\r\n\r\n            overlay.remove();\r\n        });\r\n\r\n        rightArrow.addEventListener('click', e => {\r\n            if (currentPage < maxPage) {\r\n                currentPage++;\r\n                sliderContainer.children[1].remove();\r\n\r\n                insertSlide(requestItemsArr[currentPage - 1]);\r\n                const slide = document.querySelector('.final-request__slide-container');\r\n\r\n                slide.classList.add('blur');\r\n\r\n                setTimeout(() => {\r\n                    slide.classList.remove('blur');\r\n                }, 250)\r\n            }\r\n        });\r\n\r\n        leftArrow.addEventListener('click', e => {\r\n            if (currentPage > 1) {\r\n                currentPage--;\r\n                sliderContainer.children[1].remove();\r\n\r\n                insertSlide(requestItemsArr[currentPage - 1]);\r\n                const slide = document.querySelector('.final-request__slide-container');\r\n\r\n                slide.classList.add('blur');\r\n\r\n                setTimeout(() => {\r\n                    slide.classList.remove('blur');\r\n                }, 250)\r\n            }\r\n        });\r\n\r\n        phoneCall.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            overlay.classList.add('invisible');\r\n\r\n            container.append(create.createPhoneCall());\r\n            this.controlPhoneCall(overlay, requestItemsArr, distance, service, itemId);\r\n        })\r\n\r\n    }\r\n\r\n    controlPhoneCall = (outerOverlay, requestItemsArr, distance, service, itemId) => {\r\n        const overlay = document.querySelectorAll('.overlay');\r\n        const submit = document.querySelector('.phone-call__submit');\r\n        const close = document.querySelector('.phone-call__close');\r\n        const form = document.querySelector('.phone-call__form');\r\n        const container = document.querySelector('.container');\r\n\r\n        close.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            outerOverlay.classList.remove('invisible');\r\n\r\n            form.reset();\r\n            overlay[1].remove();\r\n        });\r\n\r\n        submit.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(form);\r\n\r\n\r\n            if (formData.get('surname') === '' || formData.get('name') === '' || formData.get('phone') === '') {\r\n                container.append(create.createSuccess('no'));\r\n                this.successControl();\r\n            } else {\r\n                requestItemsArr.forEach(e => {\r\n                    e.surname = formData.get('surname').trim();\r\n                    e.name = formData.get('name').trim();\r\n                    e.phone = formData.get('phone').trim();\r\n                    // e.distance = distance;\r\n                    e.date = this.getCurrentDate();\r\n                    e.column = 'one';\r\n                    e.service = service;\r\n                });\r\n\r\n\r\n                dbRequest.addRequest(requestItemsArr[0], service, container, 'yes', requestItemsArr);\r\n                const calcContainer = document.getElementById('calcContainer');\r\n                const calcButtons = document.querySelector('.calc__final-buttons');\r\n                calcButtons.remove();\r\n                calcContainer.append(create.createCalcButtons('yes'));\r\n                this.controlCalcButtons(requestItemsArr, itemId, service, 'yes');\r\n\r\n\r\n                form.reset();\r\n                overlay[1].remove();\r\n                outerOverlay.remove();\r\n            }\r\n        });\r\n    }\r\n\r\n    successControl = () => {\r\n        const container = document.querySelector('.container');\r\n        const successOverlay = document.querySelector('.overlay-success');\r\n\r\n        container.style.cursor = 'pointer';\r\n\r\n        successOverlay.addEventListener('click', e => {\r\n            successOverlay.remove();\r\n            container.style.cursor = 'auto';\r\n            document.body.style.overflow = 'visible';\r\n        });\r\n    };\r\n\r\n    controlStrip = (requestItemsArr, itemId, service) => {\r\n        const container = document.getElementById('calcContainer');\r\n\r\n        container.addEventListener('click', e => {\r\n            const target = e.target;\r\n\r\n            if (target.classList.contains('calc__delete-strip')) {\r\n                const strip = target.closest('.calc__strip-container');\r\n                const calcButtons = document.querySelector('.calc__final-buttons');\r\n                const id = strip.dataset.id;\r\n\r\n                requestItemsArr.forEach(e => {\r\n                    if (e.id === +id) {\r\n                        requestItemsArr.splice(requestItemsArr.indexOf(e), 1);\r\n                    }\r\n                });\r\n\r\n                console.log(requestItemsArr);\r\n\r\n                calcButtons.remove();\r\n                container.append(create.createCalcButtons('yes'));\r\n                this.controlCalcButtons(requestItemsArr, itemId, service, 'yes');\r\n                strip.remove();\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    getItemByPanelId = async (elem) => {\r\n        let panelId = elem.dataset.panelId;\r\n        let requests = await admin.getAllRequests();\r\n        let item = requests.find(request => +request.panelId === +panelId);\r\n\r\n        return item;\r\n    }\r\n\r\n    dragControl = async () => {\r\n        const draggables = document.querySelectorAll('.draggable')\r\n        const containers = document.querySelectorAll('.drag-container')\r\n\r\n        draggables.forEach(draggable => {\r\n            draggable.addEventListener('dragstart', () => {\r\n                draggable.classList.add('dragging')\r\n            })\r\n            draggable.addEventListener('dragend', async () => {\r\n                draggable.classList.remove('dragging');\r\n\r\n                const item = await this.getItemByPanelId(draggable);\r\n                if (draggable.closest('.kanban__column-content').classList.contains('one')) {\r\n                    dbRequest.editRequest({\r\n                        column: 'one'\r\n                    }, item.service, item.id);\r\n                } else if (draggable.closest('.kanban__column-content').classList.contains('two')) {\r\n                    dbRequest.editRequest({\r\n                        column: 'two'\r\n                    }, item.service, item.id);\r\n                } else if (draggable.closest('.kanban__column-content').classList.contains('three')) {\r\n                    dbRequest.editRequest({\r\n                        column: 'three'\r\n                    }, item.service, item.id);\r\n                } else if (draggable.closest('.kanban__column-content').classList.contains('four')) {\r\n                    dbRequest.editRequest({\r\n                        column: 'four'\r\n                    }, item.service, item.id);\r\n                }\r\n            })\r\n        })\r\n        containers.forEach(container => {\r\n            container.addEventListener('dragover', e => {\r\n                e.preventDefault()\r\n                const draggable = document.querySelector('.dragging')\r\n                container.appendChild(draggable)\r\n                this.columnControl();\r\n            })\r\n        })\r\n    }\r\n    columnControl = () => {\r\n        const columns = document.querySelectorAll('.kanban__column-content');\r\n        const count = document.querySelectorAll('.kanban__column-count');\r\n\r\n        let i = 0;\r\n        count.forEach(e => {\r\n            e.textContent = columns[i].children.length;\r\n            i++;\r\n        })\r\n\r\n        let childAmount = [];\r\n        columns.forEach(e => {\r\n            childAmount.push(e.children.length)\r\n        })\r\n        const maxValue = Math.max(...childAmount);\r\n\r\n        columns.forEach(e => {\r\n            e.style.height = (+maxValue * 183) + (+maxValue * 10) + 'px'\r\n        })\r\n\r\n    }\r\n\r\n    cardDeleteControl = () => {\r\n        let allDeleteButtons = document.querySelectorAll('.kanban__card-delete');\r\n\r\n        allDeleteButtons.forEach(e => {\r\n            e.addEventListener('click', async () => {\r\n                const card = e.closest('.kanban__card');\r\n                const item = await this.getItemByPanelId(card);\r\n                console.log(item);\r\n\r\n                dbRequest.deleteRequest(item.service, item.id);\r\n                card.remove();\r\n                this.columnControl();\r\n            });\r\n        });\r\n    }\r\n\r\n    cardEditControl = async () => {\r\n        let allEditButtons = document.querySelectorAll('.kanban__card-open');\r\n        const container = document.querySelector('.container');\r\n\r\n        allEditButtons.forEach(e => {\r\n            e.addEventListener('click', async () => {\r\n                const card = e.closest('.kanban__card');\r\n                const item = await this.getItemByPanelId(card);\r\n\r\n                if (item.service === 'request') {\r\n                    container.append(create.createRequestModalAdmin());\r\n                    this.editModalAdminControl(item);\r\n                } else if (item.service === 'partner') {\r\n                    container.append(create.createPartnerModal());\r\n                    this.editPartnerModalAdmin(item);\r\n                } else if (item.service === 'trans') {\r\n                    container.append(create.createTransModalAdmin());\r\n                    this.editTransModalAdmin(item);\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    editModalAdminControl = async (item) => {\r\n        const select = document.querySelector('.request-modal__select');\r\n        const amount = document.getElementById('amount');\r\n        const index = document.getElementById('index');\r\n        const comment = document.getElementById('comment');\r\n        const surname = document.getElementById('surname');\r\n        const name = document.getElementById('name');\r\n        const phone = document.getElementById('phone');\r\n        const edit = document.getElementById('confirm');\r\n        const cancel = document.getElementById('cancel');\r\n        const form = document.getElementById('requestForm');\r\n        const modal = document.querySelector('.overlay');\r\n\r\n        select.value = item.type;\r\n        amount.value = item.amount;\r\n        index.value = item.index;\r\n        comment.value = item.comment;\r\n        surname.value = item.surname;\r\n        name.value = item.name;\r\n        phone.value = item.phone;\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            form.reset();\r\n            modal.remove();\r\n        });\r\n\r\n        edit.addEventListener('click', async e => {\r\n            e.preventDefault();\r\n            dbRequest.editRequest({\r\n                type: select.value,\r\n                amount: amount.value,\r\n                index: index.value,\r\n                comment: comment.value,\r\n                surname: surname.value,\r\n                name: name.value,\r\n                phone: phone.value\r\n            }, item.service, item.id);\r\n\r\n            form.reset();\r\n            admin.renderCards();\r\n            modal.remove();\r\n        })\r\n    }\r\n\r\n    editPartnerModalAdmin = async (item) => {\r\n        const company = document.getElementById('company');\r\n        const select = document.querySelector('.partner-modal__select');\r\n        const inn = document.getElementById('inn');\r\n        const comment = document.getElementById('comment');\r\n        const email = document.getElementById('email');\r\n        const phone = document.getElementById('phone');\r\n        const edit = document.querySelector('.partner-modal__send');\r\n        const cancel = document.querySelector('.partner-modal__cross');\r\n        const form = document.querySelector('.partner-modal__form');\r\n        const modal = document.querySelector('.overlay');\r\n\r\n        select.value = item.type;\r\n        company.value = item.company;\r\n        inn.value = item.inn;\r\n        comment.value = item.comment;\r\n        email.value = item.email;\r\n        phone.value = item.phone;\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            form.reset();\r\n            modal.remove();\r\n        });\r\n\r\n        edit.addEventListener('click', async e => {\r\n            e.preventDefault();\r\n            await dbRequest.editRequest({\r\n                type: select.value,\r\n                inn: inn.value,\r\n                comment: comment.value,\r\n                company: company.value,\r\n                email: email.value,\r\n                phone: phone.value\r\n            }, item.service, item.id);\r\n\r\n            form.reset();\r\n            // await admin.renderCards();\r\n            modal.remove();\r\n        })\r\n    }\r\n\r\n    editTransModalAdmin = async (item) => {\r\n        const indexFrom = document.getElementById('indexFrom');\r\n        const indexTo = document.getElementById('indexTo');\r\n        const size = document.getElementById('size');\r\n        const weight = document.getElementById('weight');\r\n        const name = document.getElementById('name');\r\n        const surname = document.getElementById('surname');\r\n        const phone = document.getElementById('phone');\r\n        const edit = document.getElementById('confirm');\r\n        const cancel = document.getElementById('cancel');\r\n        const form = document.getElementById('requestForm');\r\n        const modal = document.querySelector('.overlay');\r\n\r\n\r\n        indexFrom.value = item.indexFrom;\r\n        indexTo.value = item.indexTo;\r\n        surname.value = item.surname;\r\n        name.value = item.name;\r\n        phone.value = item.phone;\r\n        size.value = item.size;\r\n        weight.value = item.weight;\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            form.reset();\r\n            modal.remove();\r\n        });\r\n\r\n        edit.addEventListener('click', async e => {\r\n            e.preventDefault();\r\n            dbRequest.editRequest({\r\n                indexFrom: indexFrom.value,\r\n                indexTo: indexTo.value,\r\n                size: size.value,\r\n                weight: weight.value,\r\n                surname: surname.value,\r\n                name: name.value,\r\n                phone: phone.value\r\n            }, item.service, item.id);\r\n\r\n            form.reset();\r\n            admin.renderCards();\r\n            modal.remove();\r\n        })\r\n    }\r\n\r\n\r\n    searchControl = async () => {\r\n        const search = document.querySelector('.kanban__input');\r\n        const cancel = document.querySelector('.kanban__input-cancel');\r\n\r\n        const searchArray = async () => {\r\n            const arr = await admin.getAllRequests();\r\n\r\n\r\n            if (search.value === '') {\r\n                admin.renderCards();\r\n            } else {\r\n                const results = [];\r\n                arr.forEach(e => {\r\n                    for (let key in e) {\r\n                        if (e.hasOwnProperty(key)) {\r\n                            if (String(e[key]).includes(search.value)) {\r\n                                if (results.indexOf(e) === -1) {\r\n                                    results.push(e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                admin.renderCards('no', 'yes', results);\r\n            }\r\n        }\r\n\r\n\r\n        let timeout;\r\n        search.addEventListener('input', () => {\r\n            clearTimeout(timeout);\r\n\r\n            timeout = setTimeout(searchArray, 500);\r\n        });\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            search.value = '';\r\n            admin.renderCards();\r\n        })\r\n    }\r\n\r\n    searchControlNews = async () => {\r\n        const search = document.querySelector('#searchNews');\r\n        const cancel = document.querySelector('#searchNewsCancel');\r\n\r\n        const searchArray = async () => {\r\n            const arr = await dbRequest.getNews();\r\n\r\n\r\n            if (search.value === '') {\r\n                admin.renderNews();\r\n            } else {\r\n                const results = [];\r\n                arr.forEach(e => {\r\n                    for (let key in e) {\r\n                        if (e.hasOwnProperty(key)) {\r\n                            if (String(e[key]).includes(search.value)) {\r\n                                if (results.indexOf(e) === -1) {\r\n                                    results.push(e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                admin.renderNews('no', 'yes', results);\r\n            }\r\n        }\r\n\r\n\r\n        let timeout;\r\n        search.addEventListener('input', () => {\r\n            clearTimeout(timeout);\r\n\r\n            timeout = setTimeout(searchArray, 500);\r\n        });\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            search.value = '';\r\n            admin.renderCards();\r\n        })\r\n    }\r\n\r\n    priceControl = async () => {\r\n        const reqInput = document.getElementById('priceRequest');\r\n        const transInput = document.getElementById('priceTrans');\r\n\r\n        const reqSubmit = document.getElementById('priceSubmitRequest');\r\n        const transSubmit = document.getElementById('priceSubmitTrans');\r\n\r\n        const price = await dbRequest.getPrice();\r\n\r\n        reqInput.value = await price[0].kmCost;\r\n        transInput.value = await price[0].transCost;\r\n\r\n        reqSubmit.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            if (reqInput !== '' || reqInput !== null) {\r\n                dbRequest.setPrice({\r\n                    kmCost: reqInput.value\r\n                })\r\n            }\r\n        });\r\n\r\n        transSubmit.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            if (transInput !== '' || transInput !== null) {\r\n                dbRequest.setPrice({\r\n                    kmCost: transInput.value\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteAdminControl = () => {\r\n        const container = document.querySelector('.admins');\r\n\r\n        container.addEventListener('click', e => {\r\n            const target = e.target;\r\n            if (target.classList.contains('calc__delete-strip')) {\r\n                const strip = target.closest('.calc__strip-container');\r\n                dbRequest.deleteAdmins(strip.dataset.id);\r\n                strip.remove();\r\n            }\r\n        })\r\n    }\r\n\r\n    addAdminControl = () => {\r\n        const addButton = document.querySelector('.admins__add');\r\n        const container = document.querySelector('.container');\r\n\r\n        addButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            container.append(create.createAdminModal());\r\n            this.adminModalControl();\r\n        })\r\n\r\n    }\r\n\r\n    editAdminControl = () => {\r\n        const container = document.querySelector('.admins');\r\n        const mainContainer = document.querySelector('.container');\r\n\r\n        container.addEventListener('click', e => {\r\n            const target = e.target;\r\n            if (target.classList.contains('calc__strip') || target.classList.contains('calc__strip-type')) {\r\n                let strip;\r\n                if (target.classList.contains('calc__strip-type')) {\r\n                    strip = target.closest('.calc__strip')\r\n                } else {\r\n                    strip = target;\r\n                }\r\n                mainContainer.append(create.createAdminModal());\r\n                this.adminModalControl('yes', strip.closest('.calc__strip-container').dataset.id);\r\n            }\r\n        })\r\n    }\r\n\r\n    adminModalControl = async (isEdit = 'no', id = '') => {\r\n        const overlay = document.querySelector('.overlay');\r\n        const form = document.querySelector('.request-modal__form');\r\n        const submit = document.querySelector('#confirm');\r\n        const cancel = document.querySelector('#cancel');\r\n\r\n        const name = document.querySelector('#name');\r\n        const login = document.querySelector('#login');\r\n        const password = document.querySelector('#password');\r\n        const level = document.querySelector('#level');\r\n\r\n        console.log(id);\r\n\r\n        if (isEdit !== 'no') {\r\n            const admin = await dbRequest.getAdmins(id);\r\n            console.log(admin);\r\n\r\n            name.value = admin.name;\r\n            login.value = admin.login;\r\n            password.value = admin.password;\r\n            level.value = admin.level;\r\n        }\r\n\r\n        submit.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            const formData = new FormData(form);\r\n\r\n            if (formData.get('name') !== '' || formData.get('login') !== '' || formData.get('password') !== '' || formData.get('level') !== '' ) {\r\n\r\n                if (isEdit === 'no') {\r\n                    dbRequest.addAdmins({\r\n                        name: formData.get('name'),\r\n                        login: formData.get('login'),\r\n                        password: formData.get('password'),\r\n                        level: formData.get('level'),\r\n                    }, 'POST', 'admins');\r\n                } else {\r\n                    dbRequest.addAdmins({\r\n                        name: formData.get('name'),\r\n                        login: formData.get('login'),\r\n                        password: formData.get('password'),\r\n                        level: formData.get('level'),\r\n                    }, 'PATCH', `admins/${id}`);\r\n                }\r\n\r\n\r\n                form.reset();\r\n                overlay.remove();\r\n            }\r\n        })\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            form.reset();\r\n            overlay.remove();\r\n        })\r\n    }\r\n\r\n    deleteNewsControl = async () => {\r\n        const container = document.querySelector('.news-admin');\r\n\r\n        container.addEventListener('click', e => {\r\n            const target = e.target;\r\n            if (target.classList.contains('news__news-delete')) {\r\n                const newsItem = target.closest('.logistic__news-link');\r\n                dbRequest.deleteNews(newsItem.dataset.id);\r\n                newsItem.remove();\r\n            }\r\n        })\r\n    }\r\n\r\n    addNewsControl = () => {\r\n        const addButton = document.querySelector('.news__add');\r\n        const container = document.querySelector('.container');\r\n\r\n        addButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            container.append(create.createNewsModal());\r\n            this.newsModalControl();\r\n        })\r\n\r\n    }\r\n\r\n    newsModalControl = async (isEdit = 'no', id = '') => {\r\n        const overlay = document.querySelector('.overlay');\r\n        const form = document.querySelector('.request-modal__form');\r\n        const submit = document.getElementById('confirm');\r\n        const cancel = document.getElementById('cancel');\r\n\r\n        const image = document.getElementById('image');\r\n        const title = document.getElementById('title');\r\n        const text = document.getElementById('text');\r\n\r\n        let path = ''\r\n\r\n        if (isEdit !== 'no') {\r\n            const newItem = await dbRequest.getNewItem(id);\r\n            console.log(newItem);\r\n\r\n            title.value = await newItem.title;\r\n            text.value = newItem.text;\r\n            image.filename = newItem.image;\r\n        }\r\n\r\n        const controlImg = async () => {\r\n            const file =  document.querySelector('.file-input');\r\n            const preview = document.getElementById('preview');\r\n            const wrapper = document.querySelector('.preview-wrapper');\r\n            const overweight = document.querySelector('.img-overweight');\r\n\r\n            overweight.textContent = '';\r\n            preview.src = '';\r\n            file.value = '';\r\n            preview.hidden = true;\r\n            wrapper.hidden = true;\r\n\r\n            if (path !== '') {\r\n                wrapper.hidden = false;\r\n                preview.hidden = false;\r\n                preview.src = `/img/images/${path}`;\r\n            }\r\n\r\n            preview.addEventListener('click', e => {\r\n                preview.src = '';\r\n                preview.hidden = true;\r\n                wrapper.hidden = true;\r\n                file.value = '';\r\n                path = '';\r\n            });\r\n\r\n            file.addEventListener('click', () => {\r\n                overweight.textContent = '';\r\n                if (file.files.length > 0) {\r\n                    file.value = '';\r\n                    wrapper.hidden = true;\r\n                    preview.src = '';\r\n                    path = '';\r\n                }\r\n            })\r\n\r\n            file.addEventListener('change', async () => {\r\n                if (file.files.length > 0) {\r\n                    if ((file.files[0].size / (1024*1024)).toFixed(2) > 1) {\r\n                        overweight.textContent = 'Изображение не должно превышать размер 1 Мб'\r\n                    } else {\r\n                        const chosenFile = file.files[0]\r\n                        const src = URL.createObjectURL(chosenFile);\r\n\r\n                        path = `${chosenFile.name}`;\r\n\r\n                        console.log(file.files[0]);\r\n                        wrapper.hidden = false;\r\n                        preview.hidden = false;\r\n                        preview.src = src;\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n        controlImg();\r\n\r\n        submit.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            const formData = new FormData(form);\r\n\r\n            if (formData.get('name') !== '' || formData.get('text') !== '' || formData.get('image') !== '') {\r\n\r\n                if (isEdit === 'no') {\r\n                    dbRequest.addNews({\r\n                        title: formData.get('title'),\r\n                        text: formData.get('text'),\r\n                        image: path,\r\n                        date: this.getCurrentDate(),\r\n                    }, 'POST', 'news');\r\n                } else {\r\n                    dbRequest.addNews({\r\n                        title: formData.get('title'),\r\n                        text: formData.get('text'),\r\n                        image: path,\r\n                        date: this.getCurrentDate(),\r\n                    }, 'PATCH', `news/${id}`);\r\n                }\r\n\r\n\r\n                form.reset();\r\n                overlay.remove();\r\n            }\r\n        });\r\n\r\n        cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            form.reset();\r\n            overlay.remove();\r\n        })\r\n    }\r\n\r\n    editNewsControl = () => {\r\n        const container = document.querySelector('.news-admin');\r\n        const mainContainer = document.querySelector('.container');\r\n\r\n        container.addEventListener('click', e => {\r\n            const target = e.target;\r\n            if (target.classList.contains('news__news-edit')) {\r\n                let newsItem = target.closest('.logistic__news-link');\r\n                mainContainer.append(create.createNewsModal());\r\n                this.newsModalControl('yes', newsItem.dataset.id)\r\n            }\r\n        })\r\n    }\r\n\r\n    brandsControl = () => {\r\n        const cardOne = document.getElementById('distCard1');\r\n        const cardTwo = document.getElementById('distCard2');\r\n        const cardThree = document.getElementById('distCard3');\r\n        const cardFour = document.getElementById('distCard4');\r\n        const container = document.querySelector('.container');\r\n\r\n\r\n        cardOne.addEventListener('click', e => {\r\n            container.append(create.createBrandsModal('БАКАЛЕЯ', 'modal1.png'));\r\n            this.brandsModalControl();\r\n            document.body.style.overflow = 'hidden'\r\n        })\r\n        cardTwo.addEventListener('click', e => {\r\n            container.append(create.createBrandsModal('КОНДИТЕРСКАЯ ПРОДУКЦИЯ', 'modal3.png'));\r\n            this.brandsModalControl();\r\n            document.body.style.overflow = 'hidden'\r\n        })\r\n        cardThree.addEventListener('click', e => {\r\n            container.append(create.createBrandsModal('ОХЛАЖДЁННЫЕ ТОВАРЫ ', 'modal2.png'));\r\n            this.brandsModalControl();\r\n            document.body.style.overflow = 'hidden'\r\n        })\r\n        cardFour.addEventListener('click', e => {\r\n            container.append(create.createBrandsModal('НЕПРОДОВОЛЬСТВЕННЫЕ ТОВАРЫ', 'modal4.png'));\r\n            this.brandsModalControl();\r\n            document.body.style.overflow = 'hidden'\r\n        })\r\n    }\r\n    brandsModalControl = () => {\r\n        const overlay = document.querySelector('.overlay');\r\n        const cross = document.querySelector('.brands__cross');\r\n\r\n        cross.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            document.body.style.overflow = 'visible'\r\n            overlay.remove();\r\n        })\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./modules/control.js?");

/***/ }),

/***/ "./modules/create.js":
/*!***************************!*\
  !*** ./modules/create.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Create: () => (/* binding */ Create)\n/* harmony export */ });\nclass Create {\r\n    createPartnerModal = () => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.insertAdjacentHTML('beforeend', `\r\n          <div class=\"partner-modal\">\r\n                <section class=\"partner-modal__header\">\r\n                    <p class=\"partner-modal__title\">Стать партнером</p>\r\n                    <svg class=\"partner-modal__cross\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.9287 17.9304C17.3032 18.5543 16.2896 18.5543 15.6633 17.9304L9.99961 12.2675L4.33593 17.9304C3.71037 18.5543 2.69603 18.5543 2.07047 17.9304C1.4449 17.2985 1.4449 16.2907 2.07047 15.6589L7.73414 9.99595L2.07047 4.33312C1.4449 3.70925 1.4449 2.69339 2.07047 2.06951C2.69603 1.44564 3.71037 1.44564 4.33593 2.06951L9.99961 7.73244L15.6633 2.06951C16.2896 1.44564 17.3032 1.44564 17.9287 2.06951C18.5551 2.69339 18.5551 3.70925 17.9287 4.33312L12.2651 9.99595L17.9287 15.6589C18.5551 16.2907 18.5551 17.2985 17.9287 17.9304ZM14.5305 9.99595L19.0623 5.46883C20.3126 4.22108 20.3126 2.18956 19.0623 0.941811C17.8103 -0.313937 15.7817 -0.313937 14.5305 0.941811L9.99961 5.46883L5.46868 0.941811C4.21835 -0.313937 2.18967 -0.313937 0.937744 0.941811C-0.312581 2.18956 -0.312581 4.22108 0.937744 5.46883L5.46868 9.99595L0.937744 14.5311C-0.312581 15.7788 -0.312581 17.8104 0.937744 19.0582C2.18967 20.3139 4.21835 20.3139 5.46868 19.0582L9.99961 14.5311L14.5305 19.0582C15.7817 20.3139 17.8103 20.3139 19.0623 19.0582C20.3126 17.8104 20.3126 15.7788 19.0623 14.5311L14.5305 9.99595Z\" fill=\"#4BB82F\"/>\r\n                    </svg>\r\n                </section>\r\n\r\n                <form class=\"partner-modal__form\">\r\n                <section class=\"partner-modal__input-container\">\r\n                    <div class=\"partner-modal__input-data\">\r\n                        <input type=\"text\" required class=\"partner-modal__input\" id=\"company\" name=\"company\">\r\n                        <div class=\"partner-modal__underline\"></div>\r\n                        <label for=\"company\" class=\"partner-modal__label\">Юридическое лицо</label>\r\n                    </div>\r\n                    <div class=\"partner-modal__input-data\">\r\n                        <label for=\"type\" class=\"partner-modal__label-input\">\r\n                        <select name=\"type\" id=\"type\" class=\"partner-modal__select\">\r\n                            <option value=\"\" selected disabled>Тип товара</option>\r\n                            <option value=\"Бакалея\">Бакалея</option>\r\n                            <option value=\"Кондитерская продукция\">Кондитерская продукция</option>\r\n                            <option value=\"Замороженные / Охлажденные товары\">Замороженные / Охлажденные товары</option>\r\n                            <option value=\"Непродовольственная продукция\">Непродовольственная продукция</option>\r\n                        </select>\r\n                        <div class=\"partner-modal__underline\"></div>\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"partner-modal__input-data\">\r\n                        <input oninput=\"regExp.phones(this)\" type=\"number\" required class=\"partner-modal__input\" id=\"phone\" name=\"phone\">\r\n                        <div class=\"partner-modal__underline\"></div>\r\n                        <label for=\"phone\" class=\"partner-modal__label\">Номер телефона</label>\r\n                    </div>\r\n                    <div class=\"partner-modal__input-data\">\r\n                        <input type=\"text\" required class=\"partner-modal__input\" id=\"email\" name=\"email\">\r\n                        <div class=\"partner-modal__underline\"></div>\r\n                        <label for=\"email\" class=\"partner-modal__label\">e-mail</label>\r\n                    </div>\r\n                    <div class=\"partner-modal__input-data\">\r\n                        <input  oninput=\"regExp.inns(this)\" type=\"number\" required class=\"partner-modal__input\" id=\"inn\" name=\"inn\">\r\n                        <div class=\"partner-modal__underline\"></div>\r\n                        <label for=\"inn\" class=\"partner-modal__label\">ИНН</label>\r\n                    </div>\r\n                    <div class=\"partner-modal__input-data partner-modal__input-data_textarea\">\r\n                        <textarea class=\"partner-modal__textarea\" required id=\"comment\" name=\"comment\"></textarea>\r\n                        <div class=\"partner-modal__underline\"></div>\r\n                        <label for=\"comment\" class=\"partner-modal__label\">Комментарий</label>\r\n                    </div>\r\n                </section>\r\n\r\n                <button class=\"partner-modal__send btn\">Отправить</button>\r\n                </form>\r\n            </div>\r\n    `);\r\n\r\n        return overlay;\r\n    };\r\n\r\n    createNewsCard = (id, img, title, text, date, className) => {\r\n        const card = document.createElement('a');\r\n        card.href = `news-item.html?=${id}`;\r\n        card.classList.add('logistic__news-link');\r\n        card.classList.add('link');\r\n\r\n        if (img !== 'news-img.png') {\r\n            img = 'news-img-replace.png';\r\n        }\r\n\r\n        card.insertAdjacentHTML('beforeend', `\r\n            <div class=\"${className}__news-card\">\r\n                <div class=\"${className}__news-item\">\r\n                    <img src=\"img/images/${img}\" alt=\"news-img\" class=\"${className}__news-img\">\r\n                        <section class=\"${className}__news-info\">\r\n                            <p class=\"${className}__news-title\">${title.length > 17 ? title.substring(0, 17) + '...' : title}</p>\r\n                            <p class=\"${className}__news-text\">${text.length > 120 ? text.substring(0, 120) + '...' : text}</p>\r\n                        </section>\r\n                </div>\r\n                <p class=\"${className}__news-date\">${date}</p>\r\n            </div>\r\n        `);\r\n\r\n        return card;\r\n    }\r\n\r\n    createCalcStrip = (leftInfo, rightInfo, id) => {\r\n        const calcStrip = document.createElement('div');\r\n        calcStrip.classList.add('calc__strip-container');\r\n        calcStrip.dataset.id = `${id}`;\r\n\r\n        calcStrip.insertAdjacentHTML('beforeend', `\r\n                        <section class=\"calc__strip\" id=\"calcStrip\">\r\n                            <p class=\"calc__strip-type\">${leftInfo}</p>\r\n                            <p class=\"calc__strip-amount\">${rightInfo.length >= 34 ? rightInfo.substring(0, 32) + '...' : rightInfo}</p>\r\n                        </section>\r\n                        <button class=\"calc__delete-strip\">\r\n                        </button>\r\n        `);\r\n\r\n        return calcStrip;\r\n    };\r\n\r\n    createCalcButtons = (ifAdd = 'no') => {\r\n        const calcButtons = document.createElement('div');\r\n        calcButtons.classList.add('calc__final-buttons');\r\n        calcButtons.id = 'calcFinalButtons';\r\n\r\n        if (ifAdd !== 'no') {\r\n            calcButtons.insertAdjacentHTML('beforeend', `\r\n                 <button class=\"calc__calc-button\" id=\"calcCalcButton\">Рассчитать стоимость</button>\r\n                 <button class=\"calc__add-button\" id=\"calcAddButton\">+   Добавить товар</button>\r\n        `);\r\n        } else {\r\n            calcButtons.insertAdjacentHTML('beforeend', `\r\n                 <button class=\"calc__calc-button\" id=\"calcCalcButton\">Рассчитать стоимость</button>\r\n        `);\r\n        }\r\n\r\n\r\n        return calcButtons;\r\n    }\r\n\r\n    createRequestModal = () => {\r\n        const requestModal = document.createElement('div');\r\n        requestModal.classList.add('request-modal');\r\n        requestModal.id='requestModal';\r\n\r\n        requestModal.insertAdjacentHTML('beforeend', `\r\n              <section class=\"request-modal__header\">\r\n                            <p class=\"request-modal__title\">Куда доставить?</p>\r\n                            <p class=\"request-modal__title\">Что вы заказываете?</p>\r\n              </section>\r\n\r\n                        <form class=\"request-modal__form\" id=\"requestForm\">\r\n                            <section class=\"request-modal__input-container\">\r\n                                <div class=\"request-modal__input-data request-modal__input-data_radio\">\r\n                                    <section class=\"request-modal__radio-container\">\r\n                                        <div class=\"request-modal__radio\">\r\n                                            <input class=\"request-modal__input_radio\" id=\"radio-1\" type=\"radio\" name=\"country\" value=\"Россия\" checked>\r\n                                            <label for=\"radio-1\">Россия</label>\r\n                                        </div>\r\n\r\n                                        <div class=\"request-modal__radio\">\r\n                                            <input class=\"request-modal__input_radio\" id=\"radio-2\" type=\"radio\" name=\"country\" value=\"Латвия\" disabled>\r\n                                            <label for=\"radio-2\">Латвия (недоступно)</label>\r\n                                        </div>\r\n                                    </section>\r\n                                    <p class=\"request-modal__label request-modal__label_radio\">Страна</p>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <label for=\"goods-type\" class=\"request-modal__label-input\">\r\n                                        <select name=\"type\" id=\"goods-type\" class=\"request-modal__select\">\r\n                                            <option value=\"\" selected disabled>Тип товара</option>\r\n                                            <option value=\"Бакалея\">Бакалея</option>\r\n                                            <option value=\"Кондитерская продукция\">Кондитерская продукция</option>\r\n                                            <option value=\"Замороженные / Охлажденные товары\">Замороженные / Охлажденные товары</option>\r\n                                            <option value=\"Непродовольственная продукция\">Непродовольственная продукция</option>\r\n                                        </select>\r\n                                        <div class=\"request-modal__underline\"></div>\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"amount\" type=\"text\" required class=\"request-modal__input\" id=\"amount\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"amount\" class=\"request-modal__label\">Количество</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input  oninput=\"regExp.indexes(this)\" name=\"index\" type=\"number\" required class=\"request-modal__input\" id=\"index\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"index\" class=\"request-modal__label\">Индекс</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data request-modal__input-data_textarea\">\r\n                                    <textarea name=\"comment\" class=\"request-modal__textarea\" required id=\"comment\"></textarea>\r\n                                    <div class=\"request-modal__underline request-modal__underline_textarea\"></div>\r\n                                    <label for=\"comment\" class=\"request-modal__label\">Комментарий</label>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <section class=\"request-modal__button-container\">\r\n                                <button class=\"request-modal__cancel\" id=\"cancel\">Отмена</button>\r\n                                <button class=\"request-modal__confirm\" id=\"confirm\">Добавить</button>\r\n                            </section>\r\n                        </form>\r\n        `);\r\n\r\n        return requestModal;\r\n    }\r\n\r\n    createRequestModalAdmin = () => {\r\n        const requestModal = document.createElement('div');\r\n        requestModal.classList.add('request-modal');\r\n        requestModal.id='requestModal';\r\n\r\n        requestModal.insertAdjacentHTML('beforeend', `\r\n              <section class=\"request-modal__header\">\r\n                            <p class=\"request-modal__title\">Куда доставить?</p>\r\n                            <p class=\"request-modal__title\">Что заказывают?</p>\r\n              </section>\r\n\r\n                        <form class=\"request-modal__form\" id=\"requestForm\">\r\n                            <section class=\"request-modal__input-container request-modal__input-container_admin\">\r\n                                <div class=\"request-modal__input-data request-modal__input-data_radio\">\r\n                                    <section class=\"request-modal__radio-container\">\r\n                                        <div class=\"request-modal__radio\">\r\n                                            <input class=\"request-modal__input_radio\" id=\"radio-1\" type=\"radio\" name=\"country\" value=\"Россия\" checked>\r\n                                            <label for=\"radio-1\">Россия</label>\r\n                                        </div>\r\n\r\n                                        <div class=\"request-modal__radio\">\r\n                                            <input class=\"request-modal__input_radio\" id=\"radio-2\" type=\"radio\" name=\"country\" value=\"Латвия\" disabled>\r\n                                            <label for=\"radio-2\">Латвия (недоступно)</label>\r\n                                        </div>\r\n                                    </section>\r\n                                    <p class=\"request-modal__label request-modal__label_radio\">Страна</p>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <label for=\"goods-type\" class=\"request-modal__label-input\">\r\n                                        <select name=\"type\" id=\"goods-type\" class=\"request-modal__select\">\r\n                                            <option value=\"\" selected disabled>Тип товара</option>\r\n                                            <option value=\"Бакалея\">Бакалея</option>\r\n                                            <option value=\"Кондитерская продукция\">Кондитерская продукция</option>\r\n                                            <option value=\"Замороженные / Охлажденные товары\">Замороженные / Охлажденные товары</option>\r\n                                            <option value=\"Непродовольственная продукция\">Непродовольственная продукция</option>\r\n                                        </select>\r\n                                        <div class=\"request-modal__underline\"></div>\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"amount\" type=\"text\" required class=\"request-modal__input\" id=\"amount\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"amount\" class=\"request-modal__label\">Количество</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input  oninput=\"regExp.indexes(this)\" name=\"index\" type=\"number\" required class=\"request-modal__input\" id=\"index\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"index\" class=\"request-modal__label\">Индекс</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data request-modal__input-data_textarea\">\r\n                                    <textarea name=\"comment\" class=\"request-modal__textarea\" required id=\"comment\"></textarea>\r\n                                    <div class=\"request-modal__underline request-modal__underline_textarea\"></div>\r\n                                    <label for=\"comment\" class=\"request-modal__label\">Комментарий</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"surname\" oninput=\"regExp.names(this)\" type=\"text\" required class=\"request-modal__input\" id=\"surname\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"surname\" class=\"request-modal__label\">Фамилия</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"name\" oninput=\"regExp.names(this)\" type=\"text\" required class=\"request-modal__input\" id=\"name\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"name\" class=\"request-modal__label\">Имя</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"phone\" oninput=\"regExp.phones(this)\" type=\"text\" required class=\"request-modal__input\" id=\"phone\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"phone\" class=\"request-modal__label\">Телефон</label>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <section class=\"request-modal__button-container\">\r\n                                <button class=\"request-modal__cancel\" id=\"cancel\">Отмена</button>\r\n                                <button class=\"request-modal__confirm\" id=\"confirm\">Редактировать</button>\r\n                            </section>\r\n                        </form>\r\n        `);\r\n\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n        overlay.append(requestModal);\r\n\r\n        return overlay;\r\n    }\r\n\r\n    createTransModal = () => {\r\n        const requestModal = document.createElement('div');\r\n        requestModal.classList.add('request-modal');\r\n        requestModal.id='requestModal';\r\n\r\n        requestModal.insertAdjacentHTML('beforeend', `\r\n              <section class=\"request-modal__header\">\r\n                            <p class=\"request-modal__title\">Откуда доставить?</p>\r\n                            <p class=\"request-modal__title\">Куда доставить?</p>\r\n              </section>\r\n\r\n                        <form class=\"request-modal__form\" id=\"requestForm\">\r\n                            <section class=\"request-modal__input-container\">\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input  oninput=\"regExp.indexes(this)\" name=\"indexFrom\" type=\"number\" required class=\"request-modal__input\" id=\"indexFrom\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"indexFrom\" class=\"request-modal__label\">Индекс</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input oninput=\"regExp.indexes(this)\" name=\"indexTo\" type=\"number\" required class=\"request-modal__input\" id=\"indexTo\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"indexTo\" class=\"request-modal__label\">Индекс</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input oninput=\"regExp.sizes(this)\" name=\"size\" type=\"text\" required class=\"request-modal__input\" id=\"size\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"size\" class=\"request-modal__label\">Габариты груза</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input oninput=\"regExp.weights(this)\" name=\"weight\" type=\"number\" required class=\"request-modal__input\" id=\"weight\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"weight\" class=\"request-modal__label\">Вес груза (кг.)</label>\r\n                                </div>\r\n                            </section>\r\n                            <p class=\"request-modal__size-warning\">В любой последовательности. <br>\r\n                                Пример: 45 80 100\r\n                            </p>\r\n\r\n                            <section class=\"request-modal__button-container request-modal__button-container_trans\">\r\n                                <p class=\"request-modal__city-warning\">*Только по городу Калининград</p>\r\n                                <button class=\"request-modal__cancel\" id=\"cancel\">Отмена</button>\r\n                                <button class=\"request-modal__confirm\" id=\"confirm\">Добавить</button>\r\n                            </section>\r\n                        </form>\r\n        `);\r\n\r\n        return requestModal;\r\n    }\r\n\r\n    createTransModalAdmin = () => {\r\n        const requestModal = document.createElement('div');\r\n        requestModal.classList.add('request-modal');\r\n        requestModal.id='requestModal';\r\n\r\n        requestModal.insertAdjacentHTML('beforeend', `\r\n              <section class=\"request-modal__header\">\r\n                            <p class=\"request-modal__title\">Откуда доставить?</p>\r\n                            <p class=\"request-modal__title\">Куда доставить?</p>\r\n              </section>\r\n\r\n                        <form class=\"request-modal__form\" id=\"requestForm\">\r\n                            <section class=\"request-modal__input-container request-modal__input-container_admin\">\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input  oninput=\"regExp.indexes(this)\" name=\"indexFrom\" type=\"number\" required class=\"request-modal__input\" id=\"indexFrom\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"indexFrom\" class=\"request-modal__label\">Индекс</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input oninput=\"regExp.indexes(this)\" name=\"indexTo\" type=\"number\" required class=\"request-modal__input\" id=\"indexTo\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"indexTo\" class=\"request-modal__label\">Индекс</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input oninput=\"regExp.sizes(this)\" name=\"size\" type=\"text\" required class=\"request-modal__input\" id=\"size\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"size\" class=\"request-modal__label\">Габариты груза</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input oninput=\"regExp.weights(this)\" name=\"weight\" type=\"number\" required class=\"request-modal__input\" id=\"weight\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"weight\" class=\"request-modal__label\">Вес груза (кг.)</label>\r\n                                </div>\r\n                                         <div class=\"request-modal__input-data\">\r\n                                    <input name=\"surname\" oninput=\"regExp.names(this)\" type=\"text\" required class=\"request-modal__input\" id=\"surname\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"surname\" class=\"request-modal__label\">Фамилия</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"name\" oninput=\"regExp.names(this)\" type=\"text\" required class=\"request-modal__input\" id=\"name\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"name\" class=\"request-modal__label\">Имя</label>\r\n                                </div>\r\n                                <div class=\"request-modal__input-data\">\r\n                                    <input name=\"phone\" oninput=\"regExp.phones(this)\" type=\"text\" required class=\"request-modal__input\" id=\"phone\">\r\n                                    <div class=\"request-modal__underline\"></div>\r\n                                    <label for=\"phone\" class=\"request-modal__label\">Телефон</label>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <section class=\"request-modal__button-container request-modal__button-container_trans\">\r\n                                <p class=\"request-modal__city-warning\">*Только по городу Калининград</p>\r\n                                <button class=\"request-modal__cancel\" id=\"cancel\">Отмена</button>\r\n                                <button class=\"request-modal__confirm\" id=\"confirm\">Добавить</button>\r\n                            </section>\r\n                        </form>\r\n        `);\r\n\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.append(requestModal);\r\n\r\n        return overlay;\r\n    }\r\n\r\n    createFinalRequest = (price) => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.insertAdjacentHTML('beforeend', `\r\n                 <div class=\"final-request\">\r\n                <div class=\"final-request__slider\">\r\n                    <button class=\"final-request__arrow final-request__arrow_left\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"46\" viewBox=\"0 0 46 46\" fill=\"none\">\r\n                            <ellipse cx=\"22.8\" cy=\"22.7583\" rx=\"22.8\" ry=\"22.7583\" transform=\"matrix(-1 0 0 1 45.6001 0)\" fill=\"#4BB82F\"/>\r\n                            <path d=\"M11.5819 24.172C10.8008 23.391 10.8008 22.1246 11.5819 21.3436L24.3098 8.61568C25.0909 7.83463 26.3572 7.83463 27.1382 8.61568C27.9193 9.39673 27.9193 10.6631 27.1382 11.4441L15.8245 22.7578L27.1382 34.0715C27.9193 34.8526 27.9193 36.1189 27.1382 36.8999C26.3572 37.681 25.0909 37.681 24.3098 36.8999L11.5819 24.172ZM15.5041 24.7578H12.9961V20.7578H15.5041V24.7578Z\" fill=\"white\"/>\r\n                        </svg>\r\n                    </button>\r\n\r\n\r\n                    <button class=\"final-request__arrow final-request__arrow_right\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"46\" viewBox=\"0 0 46 46\" fill=\"none\">\r\n                            <ellipse cx=\"22.8\" cy=\"22.7583\" rx=\"22.8\" ry=\"22.7583\" fill=\"#4BB82F\"/>\r\n                            <path d=\"M34.0182 24.172C34.7993 23.391 34.7993 22.1246 34.0182 21.3436L21.2903 8.61568C20.5092 7.83463 19.2429 7.83463 18.4619 8.61568C17.6808 9.39673 17.6808 10.6631 18.4619 11.4441L29.7756 22.7578L18.4619 34.0715C17.6808 34.8526 17.6808 36.1189 18.4619 36.8999C19.2429 37.681 20.5092 37.681 21.2903 36.8999L34.0182 24.172ZM30.096 24.7578H32.604V20.7578H30.096V24.7578Z\" fill=\"white\"/>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"final-request__pages\">\r\n                    <p class=\"final-request__page\">1/4</p>\r\n                </div>\r\n\r\n                <div class=\"final-request__bottom\">\r\n                    <section class=\"final-request__warning\">\r\n                        <p class=\"final-request__price\">Примерная стоимость: ${price}+ руб.</p>\r\n                        <p class=\"final-request__price-warning\">(*Не является финальной. <br>\r\n                            Отображает минимальную цену)</p>\r\n                    </section>\r\n\r\n                    <section class=\"final-request__buttons\">\r\n                        <button class=\"final-request__call-button\">Заказать обратный звонок</button>\r\n                        <button class=\"final-request__cancel-button\">Назад</button>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        `);\r\n\r\n        return overlay\r\n    }\r\n\r\n    createFinalSlide = (country, type, amount, index, comment) => {\r\n        const finalSlide = document.createElement('div');\r\n        finalSlide.classList.add('final-request__slide-container');\r\n\r\n        finalSlide.insertAdjacentHTML('beforeend', `\r\n                        <section class=\"final-request__slide-header\">\r\n                            <p class=\"final-request__header-text\">Итого:</p>\r\n                            <p class=\"final-request__header-text\">Заказ товара</p>\r\n                        </section>\r\n                        <section class=\"final-request__slide-content\">\r\n                            <p class=\"final-request__slide-text\">Страна: ${country}</p>\r\n                            <p class=\"final-request__slide-text\">Тип товара: ${type}</p>\r\n                            <p class=\"final-request__slide-text\">Количество: ${amount}</p>\r\n                            <p class=\"final-request__slide-text\">Индекс: ${index}</p>\r\n                            <p class=\"final-request__slide-text final-request__slide-text_comment\">Комментарий: ${comment.length > 214 ? comment.substring(0, 211) + '...' : comment}</p>\r\n                        </section>\r\n        `);\r\n\r\n        return finalSlide;\r\n    }\r\n\r\n    createFinaSlideTrans = (indexFrom, indexTo, size, weight) => {\r\n        const finalSlide = document.createElement('div');\r\n        finalSlide.classList.add('final-request__slide-container');\r\n\r\n        finalSlide.insertAdjacentHTML('beforeend', `\r\n                        <section class=\"final-request__slide-header\">\r\n                            <p class=\"final-request__header-text\">Итого:</p>\r\n                            <p class=\"final-request__header-text\">Транспортировка товара</p>\r\n                        </section>\r\n                        <section class=\"final-request__slide-content\">\r\n                            <p class=\"final-request__slide-text\">Индекс от: ${indexFrom}</p>\r\n                            <p class=\"final-request__slide-text\">Индекс до: ${indexTo}</p>\r\n                            <p class=\"final-request__slide-text\">Габариты: ${size}</p>\r\n                            <p class=\"final-request__slide-text\">Вес: ${weight}</p>\r\n                        </section>\r\n        `);\r\n\r\n        return finalSlide;\r\n    }\r\n\r\n    createPhoneCall = () => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.insertAdjacentHTML('beforeend', `\r\n             <div class=\"phone-call\">\r\n                <div class=\"phone-call__header\">\r\n                    <p class=\"phone-call__title\">Заказать обратный звонок</p>\r\n                    <button class=\"phone-call__close\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.9287 17.9304C17.3032 18.5543 16.2896 18.5543 15.6633 17.9304L9.99961 12.2675L4.33593 17.9304C3.71037 18.5543 2.69603 18.5543 2.07047 17.9304C1.4449 17.2985 1.4449 16.2907 2.07047 15.6589L7.73414 9.99595L2.07047 4.33312C1.4449 3.70925 1.4449 2.69339 2.07047 2.06951C2.69603 1.44564 3.71037 1.44564 4.33593 2.06951L9.99961 7.73244L15.6633 2.06951C16.2896 1.44564 17.3032 1.44564 17.9287 2.06951C18.5551 2.69339 18.5551 3.70925 17.9287 4.33312L12.2651 9.99595L17.9287 15.6589C18.5551 16.2907 18.5551 17.2985 17.9287 17.9304ZM14.5305 9.99595L19.0623 5.46883C20.3126 4.22108 20.3126 2.18956 19.0623 0.941811C17.8103 -0.313937 15.7817 -0.313937 14.5305 0.941811L9.99961 5.46883L5.46868 0.941811C4.21835 -0.313937 2.18967 -0.313937 0.937744 0.941811C-0.312581 2.18956 -0.312581 4.22108 0.937744 5.46883L5.46868 9.99595L0.937744 14.5311C-0.312581 15.7788 -0.312581 17.8104 0.937744 19.0582C2.18967 20.3139 4.21835 20.3139 5.46868 19.0582L9.99961 14.5311L14.5305 19.0582C15.7817 20.3139 17.8103 20.3139 19.0623 19.0582C20.3126 17.8104 20.3126 15.7788 19.0623 14.5311L14.5305 9.99595Z\" fill=\"#4BB82F\"/>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n\r\n                <form class=\"phone-call__form\">\r\n                    <section class=\"phone-call__inputs\">\r\n                        <div class=\"request-modal__input-data\">\r\n                            <input oninput=\"regExp.names(this)\" name=\"surname\" type=\"text\" required class=\"request-modal__input\" id=\"surname\">\r\n                            <div class=\"request-modal__underline\"></div>\r\n                            <label for=\"surname\" class=\"request-modal__label\">Фамилия</label>\r\n                        </div>\r\n\r\n                        <div class=\"request-modal__input-data\">\r\n                            <input oninput=\"regExp.names(this)\" name=\"name\" type=\"text\" required class=\"request-modal__input\" id=\"name\">\r\n                            <div class=\"request-modal__underline\"></div>\r\n                            <label for=\"name\" class=\"request-modal__label\">Имя</label>\r\n                        </div>\r\n\r\n                        <div class=\"request-modal__input-data\">\r\n                            <input oninput=\"regExp.phones(this)\" name=\"phone\" type=\"number\" required class=\"request-modal__input\" id=\"phone\">\r\n                            <div class=\"request-modal__underline\"></div>\r\n                            <label for=\"phone\" class=\"request-modal__label\">Номер телефона</label>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button class=\"phone-call__submit btn\">Заказать</button>\r\n                </form>\r\n            </div>\r\n        `);\r\n\r\n        return overlay\r\n    };\r\n\r\n    createSuccess = (isSuccess = 'yes') => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n        overlay.classList.add('overlay-success');\r\n\r\n        if (isSuccess === 'yes') {\r\n            overlay.insertAdjacentHTML('beforeend', `\r\n             <div class=\"success\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\r\n                    <path d=\"M40 0C17.96 0 0 17.96 0 40C0 62.04 17.96 80 40 80C62.04 80 80 62.04 80 40C80 17.96 62.04 0 40 0ZM59.12 30.8L36.44 53.48C35.88 54.04 35.12 54.36 34.32 54.36C33.52 54.36 32.76 54.04 32.2 53.48L20.88 42.16C19.72 41 19.72 39.08 20.88 37.92C22.04 36.76 23.96 36.76 25.12 37.92L34.32 47.12L54.88 26.56C56.04 25.4 57.96 25.4 59.12 26.56C60.28 27.72 60.28 29.6 59.12 30.8Z\" fill=\"#4BB82F\"/>\r\n                </svg>\r\n                <p class=\"success__text\">Успех!</p>\r\n            </div>\r\n        `);\r\n        } else if (isSuccess === 'no') {\r\n            overlay.insertAdjacentHTML('beforeend', `\r\n             <div class=\"success\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.1425 50.6C55.12 51.575 55.12 53.1751 54.1425 54.1501C53.1675 55.1251 51.5825 55.1251 50.605 54.1501L40.015 43.5501L29.35 54.2249C28.365 55.1999 26.7701 55.1999 25.7851 54.2249C24.8026 53.2249 24.8026 51.625 25.7851 50.65L36.45 39.975L25.86 29.4C24.8825 28.425 24.8825 26.8249 25.86 25.8499C26.8325 24.8749 28.4175 24.8749 29.395 25.8499L39.985 36.4499L50.73 25.7001C51.715 24.7251 53.3074 24.7251 54.2924 25.7001C55.2749 26.7001 55.2749 28.2749 54.2924 29.2749L43.55 40.025L54.1425 50.6ZM40 0C17.9075 0 0 17.9 0 40C0 62.1 17.9075 80 40 80C62.0925 80 80 62.1 80 40C80 17.9 62.0925 0 40 0Z\" fill=\"#D93333\"/>\r\n                </svg>\r\n                <p class=\"success__text\">Что-то пошло не так</p>\r\n            </div>\r\n        `);\r\n        } else if (isSuccess === 'wait') {\r\n            overlay.insertAdjacentHTML('beforeend', `\r\n             <div class=\"success\">\r\n                <span class=\"loader\"></span>\r\n                <p class=\"success__text\">Подождите</p>\r\n            </div>\r\n          `);\r\n        }\r\n\r\n\r\n        return overlay\r\n    };\r\n\r\n    createKanban = () => {\r\n        const kanban = document.createElement('div');\r\n        kanban.classList.add('kanban');\r\n        kanban.id = 'kanban';\r\n\r\n        kanban.insertAdjacentHTML('beforeend', `\r\n            <div class=\"kanban\">\r\n            <div class=\"kanban__search\">\r\n                <input placeholder=\"Поиск...\" type=\"text\" class=\"kanban__input\">\r\n                <button class=\"kanban__input-cancel\">Отмена</button>\r\n            </div>\r\n            <div class=\"kanban__container\">\r\n                <div class=\"kanban__column\">\r\n                    <div class=\"kanban__column-header header-one\">\r\n                        <p class=\"kanban__column-title\">ПОСТУПИВШИЕ</p>\r\n                        <p class=\"kanban__column-count\">0</p>\r\n                    </div>\r\n                    <div class=\"kanban__column-content drag-container one\">\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"kanban__column\">\r\n                    <div class=\"kanban__column-header header-two\">\r\n                        <p class=\"kanban__column-title\">ОБРАБОТАННЫЕ</p>\r\n                        <p class=\"kanban__column-count\">0</p>\r\n                    </div>\r\n                    <div class=\"kanban__column-content drag-container two\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"kanban__column\">\r\n                    <div class=\"kanban__column-header header-three\">\r\n                        <p class=\"kanban__column-title\">В ПРОЦЕССЕ ИСПОЛНЕНИЯ</p>\r\n                        <p class=\"kanban__column-count\">0</p>\r\n                    </div>\r\n                    <div class=\"kanban__column-content drag-container three\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"kanban__column\">\r\n                    <div class=\"kanban__column-header header-four\">\r\n                        <p class=\"kanban__column-title\">ЗАВЕРШЕННЫЕ</p>\r\n                        <p class=\"kanban__column-count\">0</p>\r\n                    </div>\r\n                    <div class=\"kanban__column-content drag-container four\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `);\r\n\r\n        return kanban;\r\n\r\n    }\r\n\r\n    createKanbanCard = (item) => {\r\n        const card = document.createElement('div');\r\n        card.classList.add('kanban__card');\r\n        card.classList.add('draggable');\r\n        card.draggable = true;\r\n        card.dataset.panelId = item.panelId;\r\n\r\n        let service;\r\n        let mainText;\r\n        let text;\r\n        let name;\r\n\r\n        if (item.service === 'request') {\r\n            service = 'Заказ товара';\r\n            mainText = 'Тип товара:';\r\n            text = item.type;\r\n            name = item.surname + ' ' + item.name\r\n        } else if (item.service === 'trans') {\r\n            service = 'Транспортировка товара';\r\n            mainText = 'Габариты: ' + item.size;\r\n            text = 'Вес: ' + item.weight + ' кг.';\r\n            name = item.surname + ' ' + item.name\r\n        } else if (item.service === 'partner') {\r\n            service = 'Партнерство';\r\n            mainText = 'Юр. лицо:';\r\n            text = item.company;\r\n            name = item.email\r\n        }\r\n\r\n        card.insertAdjacentHTML('beforeend', `\r\n            <div class=\"kanban__card-header\">\r\n                <p class=\"kanban__card-title\">${service.length > 25 ? service.substring(0, 22) + '...' : service}</p>\r\n                <p class=\"kanban__card-date\">${item.date}</p>\r\n            </div>\r\n            <div class=\"kanban__card-content\">\r\n                <div class=\"kanban__card-paragraph\">\r\n                    <p class=\"kanban__card-text kanban__card-text_main\">${name.length > 25 ? name.substring(0, 22) + '...' : name}</p>\r\n                    <p class=\"kanban__card-text\">${item.phone}</p>\r\n                </div>\r\n                <div class=\"kanban__card-name\">\r\n                    <p class=\"kanban__card-text kanban__card-text_main\">${mainText.length > 25 ? mainText.substring(0, 22) + '...' : mainText}</p>\r\n                    <p class=\"kanban__card-text\">${text.length > 25 ? text.substring(0, 22) + '...' : text}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"kanban__card-manage\">\r\n                <button class=\"kanban__card-delete\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"27\" viewBox=\"0 0 21 27\" fill=\"none\">\r\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                              d=\"M1.75 24.8571C1.75 25.7602 3.0625 27 3.9375 27H17.0625C17.9375 27 19.25 25.7602 19.25 24.8571V7.71429H1.75V24.8571ZM21 2.82536H16.3333L14 0H7L4.66667 2.82536H0V5.65071H21V2.82536Z\"\r\n                              fill=\"#4BB82F\"/>\r\n                    </svg>\r\n                </button>\r\n                <button class=\"kanban__card-open\">Открыть</button>\r\n            </div>\r\n        `);\r\n\r\n        return card;\r\n    }\r\n\r\n    createPriceSet = () => {\r\n        const priceSet = document.createElement('div');\r\n        priceSet.classList.add('price');\r\n        priceSet.id = 'price';\r\n\r\n        priceSet.insertAdjacentHTML('beforeend', `\r\n        <div class=\"price__container\">\r\n            <p class=\"price__text\">Цена за километр (заказ.):</p>\r\n            <input type=\"number\" class=\"price__input\" id=\"priceRequest\">\r\n            <button class=\"price__submit\" id=\"priceSubmitRequest\">ОК</button>\r\n        </div>\r\n        <div class=\"price__container\">\r\n            <p class=\"price__text\">Цена за километр (трансп.):</p>\r\n            <input type=\"number\" class=\"price__input\" id=\"priceTrans\">\r\n            <button class=\"price__submit\" id=\"priceSubmitTrans\">ОК</button>\r\n        </div>\r\n        `);\r\n\r\n        return priceSet;\r\n    }\r\n\r\n    createStripAdmin = (leftInfo, middleInfoUp, middleInfoDown, rightInfo, id) => {\r\n        const calcStrip = document.createElement('div');\r\n        calcStrip.classList.add('calc__strip-container');\r\n        calcStrip.dataset.id = `${id}`;\r\n\r\n        calcStrip.insertAdjacentHTML('beforeend', `\r\n                        <section class=\"calc__strip\" id=\"calcStrip\">\r\n                            <p class=\"calc__strip-type\">${leftInfo}</p>\r\n                            <p class=\"calc__strip-type calc__strip-type_middle\">${middleInfoUp} <br> ${middleInfoDown}</p>\r\n                            <p class=\"calc__strip-type calc__strip-type_right\">${rightInfo}</p>\r\n                        </section>\r\n                        <button class=\"calc__delete-strip\">\r\n                        </button>\r\n        `);\r\n\r\n        return calcStrip;\r\n    };\r\n    createAdmins = () => {\r\n        const admins = document.createElement('div');\r\n        admins.classList.add('admins');\r\n        admins.id = 'admins';\r\n\r\n        const adminsContainer = document.createElement('div');\r\n        adminsContainer.classList.add('admins-container');\r\n\r\n        const button = document.createElement('button');\r\n        button.classList.add('admins__add');\r\n        button.classList.add('btn');\r\n        button.innerText = 'Добавить'\r\n\r\n        adminsContainer.append(button, admins);\r\n\r\n        return adminsContainer;\r\n    }\r\n\r\n    createAdminModal = () => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.insertAdjacentHTML('beforeend', `\r\n        <div class=\"request-modal\">\r\n            <form class=\"request-modal__form\" id=\"requestForm\">\r\n                <section class=\"request-modal__input-container request-modal__input-container_admin\">\r\n                    <div class=\"request-modal__input-data\">\r\n                        <input name=\"name\" type=\"text\" required class=\"request-modal__input\" id=\"name\">\r\n                        <div class=\"request-modal__underline\"></div>\r\n                        <label for=\"name\" class=\"request-modal__label\">Имя</label>\r\n                    </div>\r\n                    <div class=\"request-modal__input-data\">\r\n                        <input name=\"login\" type=\"text\" required class=\"request-modal__input\" id=\"login\">\r\n                        <div class=\"request-modal__underline\"></div>\r\n                        <label for=\"login\" class=\"request-modal__label\">Логин</label>\r\n                    </div>\r\n                    <div class=\"request-modal__input-data\">\r\n                        <input name=\"password\" type=\"text\" required class=\"request-modal__input\" id=\"password\">\r\n                        <div class=\"request-modal__underline\"></div>\r\n                        <label for=\"password\" class=\"request-modal__label\">Пароль</label>\r\n                    </div>\r\n                    <div class=\"request-modal__input-data\">\r\n                        <input name=\"level\" type=\"number\" required class=\"request-modal__input\" id=\"level\">\r\n                        <div class=\"request-modal__underline\"></div>\r\n                        <label for=\"level\" class=\"request-modal__label\">Уровень доступа (0, 1)</label>\r\n                    </div>\r\n\r\n                </section>\r\n\r\n                <section class=\"request-modal__button-container request-modal__button-container_trans\">\r\n                    <button class=\"request-modal__cancel\" id=\"cancel\">Отмена</button>\r\n                    <button class=\"request-modal__confirm\" id=\"confirm\">Сохранить</button>\r\n                </section>\r\n            </form>\r\n        </div>\r\n        `);\r\n\r\n        return overlay;\r\n    }\r\n\r\n    createNewsModal = () => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.insertAdjacentHTML('beforeend', `\r\n        <div class=\"request-modal\">\r\n            <form class=\"request-modal__form\" id=\"requestForm\">\r\n                <section class=\"request-modal__input-container request-modal__input-container_admin\">\r\n                    <div class=\"form-group-special\">\r\n                        <div class=\"addimg\">\r\n                            <p class=\"img-overweight\"></p>\r\n                            <label for=\"image\" class=\"file-label\">Добавить изображение</label>\r\n                            <input type=\"file\" class=\"form-input file-input\" id=\"image\" name=\"image\" hidden>\r\n                        </div>\r\n                        <div class=\"preview-wrapper\">\r\n                            <img class=\"preview\" src=\"\" alt=\"pic\" id=\"preview\" hidden>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"request-modal__input-data\">\r\n                        <input name=\"title\" type=\"text\" required class=\"request-modal__input\" id=\"title\">\r\n                        <div class=\"request-modal__underline\"></div>\r\n                        <label for=\"title\" class=\"request-modal__label\">Название</label>\r\n                    </div>\r\n                    \r\n                    <div class=\"request-modal__input-data request-modal__input-data_textarea request-modal__input-data_textarea_admin\">\r\n                        <textarea name=\"text\" class=\"request-modal__textarea request-modal__textarea_admin\" required id=\"text\"></textarea>\r\n                         <div class=\"request-modal__underline request-modal__underline_textarea\"></div>\r\n                         <label for=\"text\" class=\"request-modal__label\">Текст</label>\r\n                    </div>\r\n\r\n                </section>\r\n\r\n                <section class=\"request-modal__button-container request-modal__button-container_trans\">\r\n                    <button class=\"request-modal__cancel\" id=\"cancel\">Отмена</button>\r\n                    <button class=\"request-modal__confirm\" id=\"confirm\">Сохранить</button>\r\n                </section>\r\n            </form>\r\n        </div>\r\n        `);\r\n\r\n        return overlay;\r\n    }\r\n\r\n    createAdminNewsCard = (id, img, title, text) => {\r\n        const card = document.createElement('div');\r\n        card.classList.add('logistic__news-link');\r\n        card.dataset.id = id;\r\n\r\n        if (img !== 'news-img.png') {\r\n            img = 'news-img-replace.png';\r\n        }\r\n\r\n        card.insertAdjacentHTML('beforeend', `\r\n            <div class=\"news__news-card\">\r\n                <div class=\"news__news-item\">\r\n                    <img src=\"img/images/${img}\" alt=\"news-img\" class=\"news__news-img\">\r\n                        <section class=\"news__news-info\">\r\n                            <p class=\"news__news-title\">${title.length > 17 ? title.substring(0, 17) + '...' : title}</p>\r\n                            <p class=\"news__news-text\">${text.length > 120 ? text.substring(0, 100) + '...' : text}</p>\r\n                        </section>\r\n                </div>\r\n                <p class=\"news__news-edit\">Редактировать</p>\r\n                <p class=\"news__news-delete\">Удалить</p>\r\n            </div>\r\n        `);\r\n\r\n        return card;\r\n    }\r\n\r\n    createNewsAdmin = () => {\r\n        const news = document.createElement('div');\r\n        news.classList.add('news-admin');\r\n        news.id = 'news-admin';\r\n\r\n        const newsContainer = document.createElement('div');\r\n        newsContainer.classList.add('news-container');\r\n\r\n        const button = document.createElement('button');\r\n        button.classList.add('news__add');\r\n        button.classList.add('btn');\r\n        button.innerText = 'Добавить';\r\n\r\n        newsContainer.insertAdjacentHTML('beforeend', `\r\n        <div class=\"kanban__search kanban__search_news\">\r\n                <input placeholder=\"Поиск...\" type=\"text\" class=\"kanban__input\" id=\"searchNews\">\r\n                <button class=\"kanban__input-cancel\" id=\"searchNewsCancel\">Отмена</button>\r\n            </div>\r\n        `);\r\n\r\n        newsContainer.prepend(button);\r\n        newsContainer.append(news);\r\n\r\n        return newsContainer;\r\n    }\r\n\r\n    createAdminPage = () => {\r\n        const container = document.createElement('div');\r\n        container.classList.add('container');\r\n\r\n        container.insertAdjacentHTML('beforeend', `\r\n    <header class=\"admin-header\">\r\n        <a href=\"index.html\" class=\"header__logo-link admin-logo\"><img src=\"img/icons/logo.svg\" alt=\"logo\" class=\"header__logo\"></a>\r\n        <h1 class=\"header__title_admin\">ПАНЕЛЬ АДМИНИСТРАТОРА</h1>\r\n    </header>\r\n    <main class=\"admin-main\">\r\n    </main>\r\n    <aside class=\"aside\">\r\n        <ul class=\"aside__list\">\r\n            <a href=\"#kanban\" class=\"aside__link\"><li class=\"aside__item\">Заявки</li></a>\r\n            <a href=\"#price\" class=\"aside__link\"><li class=\"aside__item\">Цена</li></a>\r\n            <a href=\"#news-admin\" class=\"aside__link\"><li class=\"aside__item\">Новости</li></a>\r\n            <a href=\"#admins\" class=\"aside__link\"><li class=\"aside__item\">Админ.</li></a>\r\n        </ul>\r\n    </aside>\r\n        `);\r\n\r\n        return container;\r\n    }\r\n\r\n    createBrandsModal = (category, img) => {\r\n        const overlay = document.createElement('div');\r\n        overlay.classList.add('overlay');\r\n\r\n        overlay.insertAdjacentHTML('beforeend', `\r\n          <div class=\"brands\">\r\n        <section class=\"brands__header\">\r\n            <h2 class=\"brands__category\">${category}</h2>\r\n            <button class=\"brands__cross\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.9287 17.9304C17.3032 18.5543 16.2896 18.5543 15.6633 17.9304L9.99961 12.2675L4.33593 17.9304C3.71037 18.5543 2.69603 18.5543 2.07047 17.9304C1.4449 17.2985 1.4449 16.2907 2.07047 15.6589L7.73414 9.99595L2.07047 4.33312C1.4449 3.70925 1.4449 2.69339 2.07047 2.06951C2.69603 1.44564 3.71037 1.44564 4.33593 2.06951L9.99961 7.73244L15.6633 2.06951C16.2896 1.44564 17.3032 1.44564 17.9287 2.06951C18.5551 2.69339 18.5551 3.70925 17.9287 4.33312L12.2651 9.99595L17.9287 15.6589C18.5551 16.2907 18.5551 17.2985 17.9287 17.9304ZM14.5305 9.99595L19.0623 5.46883C20.3126 4.22108 20.3126 2.18956 19.0623 0.941811C17.8103 -0.313937 15.7817 -0.313937 14.5305 0.941811L9.99961 5.46883L5.46868 0.941811C4.21835 -0.313937 2.18967 -0.313937 0.937744 0.941811C-0.312581 2.18956 -0.312581 4.22108 0.937744 5.46883L5.46868 9.99595L0.937744 14.5311C-0.312581 15.7788 -0.312581 17.8104 0.937744 19.0582C2.18967 20.3139 4.21835 20.3139 5.46868 19.0582L9.99961 14.5311L14.5305 19.0582C15.7817 20.3139 17.8103 20.3139 19.0623 19.0582C20.3126 17.8104 20.3126 15.7788 19.0623 14.5311L14.5305 9.99595Z\" fill=\"#F5F5F5\"/>\r\n                </svg>\r\n            </button>\r\n        </section>\r\n        <div class=\"brands__img-container\">\r\n            <img src=\"img/images/${img}\" alt=\"brands\" class=\"brand__img\">\r\n        </div>\r\n    </div>\r\n        `);\r\n        return overlay;\r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./modules/create.js?");

/***/ }),

/***/ "./modules/dbRequest.js":
/*!******************************!*\
  !*** ./modules/dbRequest.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DbRequest: () => (/* binding */ DbRequest)\n/* harmony export */ });\nclass DbRequest {\r\n    //dadadata: a99129afd66b1617593dbf2633745565b9c18f54\r\n    //2gis: 40fe5f24-615a-4fbc-8607-544388a48264\r\n\r\n    link = 'http://localhost:4545'\r\n    getNews = async () => {\r\n        return fetch(`${this.link}/news`).then(res => res.json());\r\n    }\r\n    getNewItem = async (id) => {\r\n        return fetch(`${this.link}/news/${id}`).then(res => res.json());\r\n    }\r\n    deleteNews = async (id) => {\r\n        fetch(`${this.link}/news/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n    }\r\n    addNews = async (item, method, link) => {\r\n        fetch(`${this.link}/${link}`, {\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(item)\r\n\r\n        }).then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n\r\n                admin.renderNews();\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getCost = async () => {\r\n        return fetch(`${this.link}/metaData`).then(res => res.json());\r\n    }\r\n\r\n    getDistance = async (latFrom, lonFrom, latTo, lonTo) => {\r\n        return fetch(`https://geleot.ru/compute/calculationtechnology-de-22.php?formula=Ncoordinate_distance&value1=${latFrom}&value2=${lonFrom}&value3=${latTo}&value4=${lonTo}&roundc=i3&dsp=nozpt&separator=spcheck&history=4&acv=noacvt&angle=grad&mapi=pish&curr=rub`).then(res => res.json());\r\n    }\r\n\r\n    getRequests = async (service) => {\r\n        return fetch(`${this.link}/${service}Applications`).then(res => res.json());\r\n    }\r\n\r\n    addRequest = async (request, serviceType, insert, delStrips = 'no', itemsArr = '') => {\r\n        fetch(`${this.link}/${serviceType}Applications`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(request)\r\n        })\r\n            .then((res) => {\r\n                if (res.status >= 200 && res.status < 300) {\r\n                    insert.append(create.createSuccess());\r\n                    control.successControl();\r\n\r\n                    if (delStrips !== 'no') {\r\n                        document.querySelectorAll('.calc__strip-container').forEach(e => e.remove());\r\n                        itemsArr = itemsArr.splice(0, itemsArr.length);\r\n                    }\r\n\r\n                    return res;\r\n                } else {\r\n                    insert.append(create.createSuccess('no'));\r\n                    control.successControl();\r\n\r\n                    if (delStrips !== 'no') {\r\n                        document.querySelectorAll('.calc__strip-container').forEach(e => e.remove());\r\n                        itemsArr = itemsArr.splice(0, itemsArr.length);\r\n                    }\r\n\r\n                    let error = new Error(res.statusText);\r\n                    error.response = res;\r\n                    throw error\r\n                }\r\n            });\r\n    }\r\n\r\n    getCoords = async (postalId, coordsFrom, insert, requestItemsArr, service, itemId) => {\r\n        let url = 'https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/postal_unit';\r\n        let token = 'a99129afd66b1617593dbf2633745565b9c18f54';\r\n        let query = `${postalId}`;\r\n\r\n        let options = {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Token \" + token\r\n            },\r\n            body: JSON.stringify({query: query})\r\n        }\r\n\r\n        const loader = create.createSuccess('wait');\r\n        insert.append(loader);\r\n\r\n        fetch(url, options)\r\n            .then(response => response.text())\r\n            .then(async result => {\r\n\r\n                const coordsTo = {\r\n                    lat: JSON.parse(result).suggestions[0].data.geo_lat,\r\n                    lon: JSON.parse(result).suggestions[0].data.geo_lon,\r\n                }\r\n\r\n                const getDist = (original) => {\r\n                    let str = original.result;\r\n                    let arr = str.split('>');\r\n                    arr = arr[2].split('<')\r\n                    str = arr[0]\r\n\r\n\r\n                    return Number(str.replace(/\\s/g, \"\"));\r\n                }\r\n\r\n                if (service === 'request') {\r\n                    const distance = await this.getDistance(coordsFrom.lat, coordsFrom.lon, coordsTo.lat, coordsTo.lon)\r\n\r\n\r\n\r\n                    const cost = await this.getCost();\r\n\r\n                    const price = Math.floor(+cost[0].kmCost * getDist(distance));\r\n\r\n\r\n                    insert.append(create.createFinalRequest(price === 0 ? 5000 : price));\r\n                    loader.remove();\r\n                    control.controlRequestFinal(requestItemsArr, service, String(getDist(distance)), itemId);\r\n                    document.body.style.overflow = 'hidden';\r\n\r\n                } else if (service === 'trans') {\r\n                    const distanceFinal =  await this.getDistance(coordsFrom.lat, coordsFrom.lon, coordsTo.lat, coordsTo.lon);\r\n\r\n                    const cost = await this.getCost();\r\n\r\n                    const price = Math.floor((+cost[0].transCost * getDist(await distanceFinal)));\r\n\r\n                    insert.append(create.createFinalRequest(price === 0 ? 5000 : price));\r\n                    loader.remove();\r\n                    control.controlRequestFinal(requestItemsArr, service, getDist(await distanceFinal), itemId);\r\n                    document.body.style.overflow = 'hidden';\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                loader.remove();\r\n\r\n                insert.append(create.createSuccess('no'));\r\n                control.successControl();\r\n\r\n            });\r\n    }\r\n\r\n    editRequest = async (item, serviceType, id) => {\r\n        fetch(`${this.link}/${serviceType}Applications/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n\r\n                admin.renderCards();\r\n                return res;\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteRequest = async (serviceType, id) => {\r\n        fetch(`${this.link}/${serviceType}Applications/${id}`, {\r\n            method: 'DELETE',\r\n            // headers: {\r\n            //     \"Content-Type\": \"application/json\",\r\n            // },\r\n            // body: JSON.stringify(item)\r\n        });\r\n    }\r\n\r\n    getPrice = async () => {\r\n        return fetch(`${this.link}/metaData`).then(res => res.json());\r\n    }\r\n    setPrice = async (item) => {\r\n        fetch(`${this.link}/metaData/1`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(item)\r\n        });\r\n    }\r\n\r\n    getAdmins = async (id = 'no') => {\r\n        if (id === 'no') {\r\n            return fetch(`${this.link}/admins`).then(res => res.json());\r\n        } else {\r\n            return fetch(`${this.link}/admins/${id}`).then(res => res.json());\r\n        }\r\n    }\r\n\r\n    deleteAdmins = async (id) => {\r\n        fetch(`${this.link}/admins/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n    }\r\n    addAdmins = async (item, method, link) => {\r\n        fetch(`${this.link}/${link}`, {\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(item)\r\n\r\n        }).then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n\r\n                admin.renderAdmins();\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    // addRequest = (request, serviceType) => {\r\n    //     request.forEach(e => {\r\n    //         fetch(`${this.link}/${serviceType}Applications`, {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //             },\r\n    //             body: JSON.stringify(e)\r\n    //         }).then(res => res.json());\r\n    //     });\r\n    // }\r\n\r\n}\r\n\n\n//# sourceURL=webpack:///./modules/dbRequest.js?");

/***/ }),

/***/ "./modules/regExp.js":
/*!***************************!*\
  !*** ./modules/regExp.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegExp: () => (/* binding */ RegExp)\n/* harmony export */ });\nclass RegExp {\r\n    names = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/[^а-яА-ЯёЁa]+$/, '');\r\n    }\r\n    phones = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{12}$/, '');\r\n    }\r\n    inns = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^\\d{13}$/, '');\r\n    }\r\n    amounts = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^[а-яА-ЯёЁ0-9\\s]+$/, '');\r\n    }\r\n    indexes = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^\\d{7}$/, '');\r\n    }\r\n    sizes = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^\\d{20}$/, '');\r\n    }\r\n    weights = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^\\d{15}$/, '');\r\n    }\r\n    emails = elem => {\r\n        const value = elem.value;\r\n        elem.value = value.replace(/^\\S\\z/, '');\r\n    }\r\n}\n\n//# sourceURL=webpack:///./modules/regExp.js?");

/***/ }),

/***/ "./modules/render.js":
/*!***************************!*\
  !*** ./modules/render.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Render: () => (/* binding */ Render)\n/* harmony export */ });\nclass Render {\r\n    renderNewsCards = async (news, insertClass) => {\r\n        const insert = insertClass === 'logistic' ? document.querySelector('.logistic__news')\r\n            : document.querySelector('.news__container');\r\n\r\n        insertClass === 'logistic' ? news = news.slice(-3) : news;\r\n\r\n        news.forEach(e => {\r\n            const card = create.createNewsCard(e.id, e.image, e.title, e.text, e.date, insertClass);\r\n            insert.append(card);\r\n        });\r\n    }\r\n\r\n    renderNewsPage = async (news) => {\r\n        let index = window.location.href.slice(window.location.href.indexOf('=') + 1);\r\n\r\n        let newsItem = news.find(newsItem => newsItem.id === +index);\r\n\r\n        const img = document.querySelector('.new__img');\r\n        const title = document.querySelector('.new__title');\r\n        const text = document.querySelector('.new__text');\r\n\r\n        img.src = `img/images/${newsItem.image === 'news-img.png' ? newsItem.image : 'news-img-replace.png'}`;\r\n        title.innerText = newsItem.title;\r\n        text.innerText = newsItem.text;\r\n    }\r\n    // renderMain = async (news) => {\r\n    //     const newsContainer = document.querySelector('.logistic__news');\r\n    //     await this.renderNewsCards(newsContainer, news.slice(-3), 'logistic');\r\n    // }\r\n    //\r\n    // renderNews = async (news) => {\r\n    //     const newsContainer = document.querySelector('.news__container');\r\n    //     await this.renderNewsCards(newsContainer, news, 'news');\r\n    // }\r\n}\r\n\n\n//# sourceURL=webpack:///./modules/render.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;